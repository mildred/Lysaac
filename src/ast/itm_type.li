Section Header

  + name := ITM_TYPE;

Section Inherit

  + parent_itm :Expanded ITM;

Section Public

  + prototype :ITM_EXPR_PROTO;
  
  + keywords :ITM_KEYWORDS;
  
  + block :BOOLEAN;
  
  - to_type :MAYBE(TYPE_IMPL) <-
  ( + res :MAYBE(TYPE_IMPL);
  
    warnln "FIXME(ITM_TYPE): use keywords";
  
    block.if {
      cluster_parent.prototype_for_role "Block".if { p:PROTOTYPE;
        res << p.to_type_block;
      } else_error { e:ERR;
        res <! position.error("Could not find prototype for role Block");
      };
    } else {
      slot_parent.find_type (prototype.prototype).if { t:TYPE;
        res << t.to_impl;
      } else_error { e:ERR;
        res <! position.error("Could not find type " + name);
      };
    };
    res
  );
  
  - name :CSTRING <- prototype.prototype;

Section PARSER
  
  - make_block :SELF <-
  (
    prototype := NULL;
    keywords  := NULL;
    block     := TRUE;
    Self
  );
  
  - make (k:ITM_KEYWORDS, p:ITM_EXPR_PROTO) :SELF <-
  (
    prototype := p;
    keywords  := k;
    block     := FALSE;
    Self
  );

