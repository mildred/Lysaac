Section Header

  + name := TYPE;

Section Inherit

  + parent_base_type :Expanded BASE_TYPE;
  
Section Public
  
  //////////////////////////////////////////////////////////////////////////////
  //
  // Identification
  //

  - name             :CSTRING       <- deferred;

  - is_block         :BOOLEAN       <- FALSE;
  - is_reference     :BOOLEAN       <- ( ! is_expanded);
  - is_expanded      :BOOLEAN       <- FALSE;
  - is_strict        :BOOLEAN       <- FALSE;

  - is_pointer       :BOOLEAN       <- is_reference;
  - is_void          :BOOLEAN       <- TRUE;
  - is_impl          :BOOLEAN       <- FALSE;
  
  //////////////////////////////////////////////////////////////////////////////
  //
  // Other
  //
  
  - to_impl :TYPE_IMPL <- (Self);
  
  - to_llimpl :BASE_TYPE <- to_impl;
  
  - to_string :STRING <- type_name + "<" + name + ">";

Section TYPE
  
  - keywords_str :CSTRING <-
  ( + res:ABSTRACT_STRING;
    is_reference.if {
      res := "Reference ";
    } else {
      res := "Expanded ";
    };
    is_strict.if {
      res := res + "Strict ";
    };
    res
  );

