Section Header

  + name := TYPE_POINTER;

Section Inherit

  + parent_base_type :Expanded BASE_TYPE;
  
Section Public

  - is_pointer       :BOOLEAN       <- TRUE;
  - is_void          :BOOLEAN       <- FALSE;
  
  - to_exp :BASE_TYPE <- pointer_type;

  - is_compatible_with t:BASE_TYPE :BOOLEAN <-
  (
    (t.is_pointer) && {pointer_type.is_compatible_with (t.to_exp)}
  );
  
  //////////////////////////////////////////////////////////////////////////////
  //
  // Generate
  //
  
  - generate gen:GENERATOR <-
  (
    gen.type_pointer {
      pointer_type.generate gen;
    };
  );
  
  //////////////////////////////////////////////////////////////////////////////
  //
  // Creation
  //
  
  + pointer_type :BASE_TYPE;
  
  - make t:BASE_TYPE :SELF <-
  (
    pointer_type := t;
    Self
  );


