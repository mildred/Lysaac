Section Header

  + name := ANY;

Section Inherit

  - parent_object : OBJECT := OBJECT;

Section Public

  - is_a obj:T :BOOLEAN <- same_dynamic_type obj;
  
  - if_a obj:T then true:{SELF;} :BOOLEAN <-
  (
    is_a T.if {
      true.value Self;
    }
  );
  
  - if_a obj:T then true:{SELF;} else false:{} :BOOLEAN <-
  (
    is_a T.if {
      true.value Self;
    } else false
  );

  - deferred <-
  (
    crash_with_message ("Slot deferred in " + type_name);
  );
  
  - warn s:ABSTRACT_STRING <-
  (
    STD_ERROR.put_string s;
  );
  
  - warnln s:ABSTRACT_STRING <-
  (
    STD_ERROR.put_string s;
    STD_ERROR.put_string "\n";
  );
  
  - dbg s:ABSTRACT_STRING <- warn s;
  - dbgln s:ABSTRACT_STRING <- warnln s;

  - error (p:POS, m:ABSTRACT_STRING) <-
    warnln (p.to_string + ": " + m);
  
  - progress_notice info:ABSTRACT_STRING <- (warn "*** "; warnln info;);
  
  - progress_step (cur,max:INTEGER) message info:ABSTRACT_STRING <-
  ( + percent :INTEGER;
    + p:STRING;
    p := percent.to_string;
    
    percent := cur * 100 / max;
    warn "*** [";
    p.count
      .when 1 then { warn "  "; }
      .when 2 then { warn " "; };
    warn p;
    warn "%] ";
    warn "(";
    warn (cur.to_string);
    warn "/";
    warn (max.to_string);
    warn ") ";
    warnln info;
  );

