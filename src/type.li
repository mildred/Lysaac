Section Header

  + name := TYPE;

Section Inherit

  + parent_any :Expanded ANY;
  
Section Public

  + prototype :PROTOTYPE;
  
  + block :BOOLEAN;
  
  + base_type :BASE_TYPE;

  - generate gen:GENERATOR <-
  (
    (base_type = NULL).if {
      crash_with_message ("Cannot generate type for "+prototype.name);
      not_yet_implemented;
    } else {
      base_type.generate gen;
    };
  );
  
  - to_string :STRING <- type_name + "<" + prototype.name + "," + base_type.to_string + ">";

Section PROTOTYPE

  - make p:PROTOTYPE :SELF <-
  (
    block := FALSE;
    prototype := p;
    prototype.expanded.if {
      base_type := prototype.base_type;
    } else {
      base_type := BASE_TYPE.create_pointer (prototype.base_type);
    };
    Self
  );
  
  - make_block p:PROTOTYPE :SELF <-
  (
    block := TRUE;
    prototype := p;
    base_type := BASE_TYPE.create_function_pointer;
    Self
  );
