Section Header

  + name := Expanded ERR;

Section Insert

  + parent_any :Expanded ANY;

Section Public

  + position :POS            := POS;
  + message  :CSTRING        := "";
  + parent   :REFERENCE(ERR) := NULL;
  
  - failure :BOOLEAN <- ! success;
  
  - success :BOOLEAN <-
    (position.is_null) &&
    {message.is_empty} &&
    {(parent = NULL) || {parent.to_e.success}};
  
  - to_string :STRING <-
  ( + res:STRING;
    res := STRING.create;
    to_string_in res;
    res
  );
  
  - print   <- warn   to_string;
  - println <- warnln to_string;
  
  - create msg:CSTRING :ERR <-
    make msg position POS parent NULL;

  - create msg:CSTRING parent     p:ERR :ERR <-
    make msg position POS parent (REFERENCE(ERR).create p);

  - create msg:CSTRING position pos:POS :ERR <-
    make msg position pos parent NULL;

  - create msg:CSTRING position pos:POS parent p:ERR :ERR <-
    make msg position pos parent (REFERENCE(ERR).create p);

Section ERR

  - to_string_in res:STRING <-
  (
    failure.if {
      position.is_null.if_false {
        res.append (position.to_string);
        res.append ": ";
      };
      res.append message;
      (parent != NULL).if {
        res.add_last '\n';
        parent.to_e.to_string_in res;
      };
    };
  );

Section Private

  - make msg:CSTRING position pos:POS parent p:REFERENCE(ERR) :ERR <-
  (
    message  := msg;
    position := pos;
    parent   := p;
    Self
  );

