Section Header

  + name := PROC_BLOCK;

Section Inherit

  + parent_proc :Expanded PROC;

Section Public

  + external_name :CSTRING;
  
  + self :EXPR;

Section ITM_EXPR_GROUP

  - make_block ast:ITM_EXPR_GROUP list_parent l:LIST :SELF <-
  (
    sequence_number := sequence_number + 1;
    external_name   := ("block_" + sequence_number.to_string).to_string;
    warnln ("make block " + external_name);
    itm_expr        := ast;
    list            := LIST.clone.make Self;
    self            := EXPR.clone.make_type (l.self.type);
    Self
  );

Section LIST_PROC
  
  - compile list_procs:LIST_PROC <-
  (
    list.set_list_procs list_procs;
    itm_expr.compile_in list;
  );
  
  - link <- list.link;
  
  - generate gen:GENERATOR <-
  [ -? { ! self.reg.is_realized }; ]
  (
    gen.sub external_name self self args {} do {
      list.generate gen;
    } return REG;
  );

Section Private

  + itm_expr:ITM_EXPR_GROUP;

  + list:LIST;

  - sequence_number :INTEGER;

