Section Header

  + name := SLOT_PLYM;

Section Inherit

  + parent_slot :Expanded SLOT;

Section Public

  //////////////////////////////////////////////////////////////////////////////
  //
  // Identification
  //

  - name :CSTRING <- "plym";
  
  - special_feature_slot :BOOLEAN <- TRUE;
  
  - style     :ITM_STYLE <- ITM_STYLE.make '-';
  
  - external    :BOOLEAN <- FALSE;
  - export      :BOOLEAN <- FALSE;
  - internal    :BOOLEAN <- FALSE;
  - dispatch    :BOOLEAN <- FALSE;
  - dispatcher  :BOOLEAN <- FALSE;
  - inherit     :BOOLEAN <- FALSE;
  - insert      :BOOLEAN <- FALSE;
  - is_deferred :BOOLEAN <- FALSE;

  - slot_data   :BOOLEAN <- FALSE;
  
  //////////////////////////////////////////////////////////////////////////////
  //
  // Signature
  //
  
  - result_type :TYPE <- NULL; // TODO
  
  //////////////////////////////////////////////////////////////////////////////
  //
  // Implementation
  //
  
  - internal_opcode :CSTRING <- "";

  //////////////////////////////////////////////////////////////////////////////
  //
  // Debug
  //
  
  - position :POS <- inherit_from.position;
  
  - to_string :STRING <-
  (
    type_name + "<" + to_pointer.to_string + ":" + self_prototype.to_string + ">"
  );

Section Private

  //////////////////////////////////////////////////////////////////////////////
  //
  // Private Interface
  //
  
  + inherit_from :SLOT;

  //////////////////////////////////////////////////////////////////////////////
  //
  // Compilation
  //

Section SLOT

  - compile_slot <-
  (
    // INSTR_SWITCH
    // INSTR_LABEL
    // INSTR_RET
    // ...
    // Result: NULL
  );

Section PROTOTYPE

  //////////////////////////////////////////////////////////////////////////////
  //
  // Creation
  //

  - make_in p:PROTOTYPE :SELF <-
  (
    make_error_collector ("special slot " + name);
    arguments      := FAST_ARRAY(EXPR).create 0;
    list           := NULL;
    self_prototype := p;
    self           := EXPR;
    type_index     := -1;
    result_type    := NULL;
    // Argument: Self :Strict SELF
    //arguments.add_last EXPR;
    // Argument: slot :SystemInteger
    //arguments.add_last EXPR;
    // Return: SystemPointer
    self_prototype.add_slot Self;
    Self
  );
