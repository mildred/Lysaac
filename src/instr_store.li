Section Header

  + name := INSTR_STORE; // store slot

Section Inherit

  + parent_instr :Expanded INSTR;

Section Public

  //
  // Link
  //
  
  - link;

  //
  // Generate
  //

  - generate gen:GENERATOR <-
  ( + r:REG;
    r := REG.clone.make Self static_type (/* TODO: pointer of */ slot.result_type);
    gen.getelementptr_of receiver in r refs {
      gen.arg_i32 0;
      gen.arg_i32 0;
    };
    gen.store value to r;
  );

Section ITM_EXPR_WRITE

  - make_itm itm:ITM_EXPR_WRITE store v:REG in obj:REG :SELF <-
  [
    -? { v.is_valid };
    -? { obj.is_valid };
  ]
  (
    ast      := itm;
    receiver := obj;
    value    := v;
    Self
  );

Section Private

  + ast      :ITM_EXPR_WRITE;
  + receiver :REG;
  + value    :REG;
  - slot     :SLOT <- receiver.type.prototype.find_slot (ast.slot_name);

