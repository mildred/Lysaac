Section Header

  + name := ERR;
  
  - default := ERR;

Section Insert

  + parent_any :Expanded ANY;

Section Public

  + position :POS     := POS;
  + message  :CSTRING := "";
  + parent   :ERR     := NULL;
  
  - failure :BOOLEAN <- ! success;
  
  - success :BOOLEAN <-
    (position.is_null) &&
    {message.is_empty} &&
    {(parent = NULL) || {parent.success}};
    
  - assert <-
  (
    failure.if {
      crash_with_message to_string;
    };
  );
  
  - if_fail blc:{SELF;} :SELF <-
  (
    failure.if { blc.value Self; };
    Self
  );
  
  - if_fail blc:{SELF;} else else_blc:{} :SELF <-
  (
    failure.if { blc.value Self; } else else_blc;
    Self
  );
  
  - to_string :STRING <-
  ( + res:STRING;
    res := STRING.create 128;
    to_string_in res;
    res
  );
  
  - print   <- warn   to_string;
  - println <- warnln to_string;
  
  - Self:SELF '<!' other:ERR :SELF <- append other;
  
  - extend (pos:POS, msg:ABSTRACT_STRING) :SELF <- append (create msg position pos);
  
  - append other:ERR :SELF <-
  [
    -? { Self  != SELF };
  ]
  (
    (other = SELF).if {
      // Nothing
    }.elseif {parent = NULL} then {
      success.if {
        make_other other;
      } else {
        parent := other;
      };
    } else {
      parent.append other;
    };
    Self
  );
  
  - create msg:CSTRING :SELF                               <- clone.make msg position POS parent NULL;
  - create msg:CSTRING parent     p:ERR :SELF              <- clone.make msg position POS parent p;
  - create msg:CSTRING position pos:POS :SELF              <- clone.make msg position pos parent NULL;
  - create msg:CSTRING position pos:POS parent p:ERR :SELF <- clone.make msg position pos parent p;


Section ERR

  - to_string_in res:STRING <-
  (
    failure.if {
      res.append "E:";
      position.is_null.if_false {
        res.append (position.to_string);
        res.append ": ";
      };
      res.append message;
      (parent != NULL).if {
        res.add_last '\n';
      };
    };
    (parent != NULL).if {
      parent.to_string_in res;
    };
  );

Section Private
  
  - make_other other:ERR :SELF <-
  [ -? { Self != SELF }; ]
  (
    message  := other.message;
    position := other.position;
    parent   := other.parent;
    Self
  );

  - make msg:CSTRING position pos:POS parent p:ERR :SELF <-
  [ -? { Self != SELF }; ]
  (
    message  := msg;
    position := pos;
    (p = ERR).if {
      parent := NULL;
    } else {
      parent := p;
    };
    Self
  );

