Section Header

  + name := ITM_EXPR_READ;

Section Inherit

  + parent_itm_expr :Expanded ITM_EXPR;

Section Public

  - is_void :BOOLEAN <- FALSE;

  + receiver :ITM_EXPR;
  + slot     :CSTRING;
  
  + arguments :FAST_ARRAY(ITM_EXPR);
  
  - compile_in list:LIST :VAR <-
  ( + self :VAR;
    + res:INSTR_CALL;
    
    (receiver = NULL).if {
      self := list.self;
    } else {
      self := receiver.compile_in list;
    };
    res := INSTR_CALL.clone.make_itm Self receiver self;
    arguments.iterate.loop_v { a:ITM_EXPR;
      res.add_argument (a.compile_in list);
    };
    res.add_in list.result
  );

Section PARSER
  
  - make s:CSTRING :SELF <-
  (
    slot      := s;
    receiver  := NULL;
    arguments := FAST_ARRAY(ITM_EXPR).create 0;
    Self
  );
  
  - add_argument arg:ITM_EXPR <-
  (
    arg.set_itm_parent Self;
    arguments.add_last arg;
  );
  
  - set_self s:ITM_EXPR <-
  [ -?{ receiver = NULL }; ]
  (
    receiver := s;
  );

