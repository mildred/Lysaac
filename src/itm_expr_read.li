Section Header

  + name := ITM_EXPR_READ;

Section Inherit

  + parent_itm_expr :Expanded ITM_EXPR;

Section Public

  - is_void :BOOLEAN <- FALSE;

  + receiver :ITM_EXPR;
  + slot     :CSTRING;
  + argument :ITM_EXPR;
  
  - compile_in list:LIST :VAR <-
  ( + arg, self :VAR;
    (receiver = NULL).if {
      self := list.self;
    } else {
      self := receiver.compile_in list;
    };
    arg  := argument.compile_in list;
    INSTR_CALL.clone.make_itm Self receiver self argument arg.add_in list.result
  );

Section PARSER
  
  - make (s:CSTRING, arg:ITM_EXPR) :SELF <-
  (
    arg.set_itm_parent Self;
    slot := s;
    argument := arg;
    receiver := NULL;
    Self
  );
  
  - set_self s:ITM_EXPR <-
  [ -?{ receiver = NULL }; ]
  (
    receiver := s;
  );

