Section Header

  + name := PROTOTYPE;

Section Inherit

  + parent_any :Expanded ANY;

Section Public
  
  + filename :CSTRING;
  
  + cluster :CLUSTER;
  
  + name :CSTRING <-
  ( + str :ABSTRACT_STRING;
    
    str := PATH_HELPER.basename filename;
    name := str.substring (str.lower) to (str.upper - 3)
  );
  
  - parse; // Done during construction
  
  - compile <-
  (
    create_slots;
    compile_prototype_data;
    slots.iterate.loop_v { s:SLOT;
      s.compile;
    };
  );
  
  - generate gen:GENERATOR <-
  (
    slots.iterate.loop_v { s:SLOT;
      s.generate gen;
    };
  );

Section CLUSTER_ITEM

  - make_file file:CSTRING cluster c:CLUSTER :SELF <-
  (
    cluster  := c;
    filename := file;
    ast      := PARSER_LI.clone.make Self.parse;
    Self
  );

Section Private

  + ast :ITM_PROTOTYPE;

  + slots :FAST_ARRAY(SLOT);
  
  - create_slots <-
  (
    slots := FAST_ARRAY(SLOT).create 0;
    ast.slots.iterate.loop_v { s:ITM_SLOT;
      slots.add_last (SLOT.clone.make s);
    };
  );

  - compile_prototype_data;

