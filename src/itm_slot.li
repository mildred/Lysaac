Section Header

  + name := ITM_SLOT;

Section Inherit

  + parent_itm :Expanded ITM;
  
  - parent_i_find_type :Expanded I_FIND_TYPE;

Section Public

  - find_type type_name:CSTRING :TYPE <- prototype_parent.find_type type_name;
  
  - slot_parent :ITM_SLOT <- Self;

  + section :ITM_SECTION;

  + style :ITM_STYLE;
  
  + identifier :CSTRING;
  
  + expression :ITM_EXPR;
  
  - is_external :BOOLEAN <- ( has_keyword "External" );
  
  - has_keyword k:CSTRING :BOOLEAN <-
  (
     + res :BOOLEAN;
    (keywords != NULL).if {
      res := keywords.has k;
    };
    res
  );
  
  + argument :CSTRING;
  
  + argument_type :ITM_TYPE;
  
Section PARSER

  - make :SELF <-
  (
    Self
  );
  
  - set_section s:ITM_SECTION :SELF <-
  (
    section := s;
    Self
  );
  
  - set_style s:ITM_STYLE :SELF <-
  (
    style := s;
    Self
  );
  
  - add_identifier idf:CSTRING :SELF <-
  [ -? {identifier = NULL}; ]
  (
    identifier := idf;
    Self
  );
  
  - add_argument (idf:CSTRING, type:ITM_TYPE) :SELF <-
  [ -? {argument = NULL};
    -? {argument_type = NULL}; ]
  (
    type.set_itm_parent Self;
    argument := idf;
    argument_type := type;
    Self
  );
  
  - set_keywords k:ITM_KEYWORDS :SELF <-
  (
    keywords := k;
    Self
  );
  
  - set_expression e:ITM_EXPR :SELF <-
  (
    e.set_itm_parent Self;
    expression := e;
    Self
  );
  
Section Private
  
  + keywords :ITM_KEYWORDS;

