Section Header

  + name := ITM_EXPR_INT;

Section Inherit

  + parent_itm_expr :Expanded ITM_EXPR;

Section Public

  - is_void :BOOLEAN <- FALSE;

  + value :INTEGER;

  - compile_in list:LIST :SELF <-
  (
    cluster_parent.type_for_role "Integer".if_false { e:ERR;
      results <! e.extend(position, "Discarding integer");
    } else { t:TYPE;
      results << EXPR.clone.make_type t value
        (INSTR_INT
          .clone
          .make value static_type t
          .add_in list
          .result);
    };
    Self
  );

Section PARSER
  
  - make v:INTEGER :SELF <-
  (
    results := EXPR1.clone;
    value := v;
    Self
  );

