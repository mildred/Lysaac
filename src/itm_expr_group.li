Section Header

  + name := ITM_EXPR_GROUP;

Section Inherit

  + parent_itm_expr :Expanded ITM_EXPR;

Section Public

  - is_void :BOOLEAN <- FALSE;

  + is_block :BOOLEAN;
  
  - has_results :BOOLEAN <- TRUE;

  + result  :EXPR := EXPR;
  
  + results :FAST_ARRAY(EXPR);
  
  + has_multiple_results :BOOLEAN := FALSE;

  - compile_in list:LIST :SELF <-
  (
    is_block.if {
      + block :PROC_BLOCK;
      block := PROC_BLOCK.clone.make_block Self list_parent list;
      result := EXPR.clone.make
      (
        INSTR_FNPTR
          .clone
          .make (block.external_name) cluster cluster_parent
          .add_in list
          .result,
        cluster_parent.type_block
      );
      list.list_procs.add_block block;
      is_block := FALSE;
    } else {
      instructions.iterate.loop_v { i:ITM_INST;
        i.compile_in list;
      };
      has_multiple_results := TRUE;
      result_exprs.iterate.loop_v { e:ITM_EXPR;
        results.add_last (e.compile_in list.result);
      };
    };
    Self
  );
  
  - to_string :STRING <-
  ( + res :STRING;
    res := type_name.to_string;
    is_block.if {
      res.add_last '{';
    } else {
      res.add_last '(';
    };
    res.add_last ' ';
    instructions.iterate.loop_v { i :ITM_INST;
      res.append (i.to_abstract_string);
      res.append "; ";
    };
    is_block.if {
      res.add_last '}';
    } else {
      res.add_last ')';
    };
    res
  );

Section PARSER

  - make :SELF <-
  (
    is_block := FALSE;
    instructions := FAST_ARRAY(ITM_INST).create 0;
    result_exprs := FAST_ARRAY(ITM_EXPR).create 0;
    results      := FAST_ARRAY(EXPR).create (result_exprs.count);
    Self
  );
  
  - set_block :SELF <-
  [ -?{ ! is_block }; ]
  (
    is_block := TRUE;
    Self
  );
  
  - add_inst inst:ITM_INST <-
  (
    inst.set_itm_parent Self;
    instructions.add_last inst;
  );
  
  - add_expr expr:ITM_EXPR <-
  (
    expr.set_itm_parent Self;
    result_exprs.add_last expr;
  );

Section Private

  + instructions :FAST_ARRAY(ITM_INST);

  + result_exprs :FAST_ARRAY(ITM_EXPR);
  
