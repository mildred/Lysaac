Section Header

  + name := ITM_EXPR_ARG;

Section Inherit

  + parent_itm_expr_local :Expanded ITM_EXPR_LOCAL;

Section Public

  - style :ITM_STYLE := ITM_STYLE.clone.make '+';

  - has_results :BOOLEAN <- TRUE;

  + result :EXPR := EXPR;

  - compile_in list:LIST :SELF <-
  [
    -? { result != NULL };
    -? { result.reg.is_valid };
  ]
  ( Self );
  
  + err :ERR := ERR;

Section ITM_SLOT

  - get_argument_variable :EXPR <-
  ( + t :TYPE;
    + r :REG;

    r := REG.clone;
    t := type.to_type;
    (t != NULL).if {
      r .make_type t
        .make_pretty_name name;
      ? { r.is_valid };
      result := EXPR.clone.make(r, t);
    } else {
      err := error(type.err, position, "Cannot resolve type for "+name); // TODO
      result = NULL;
    };
    result
  )
  [
    +? { (err.failure) || {Result != NULL} };
    +? {result = Result};
  ];

Section PARSER

  - make (n:CSTRING, t:ITM_TYPE) :SELF <-
  (
    t.set_itm_parent Self;
    name := n;
    type := t;
    Self
  );

