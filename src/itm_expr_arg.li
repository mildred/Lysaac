Section Header

  + name := ITM_EXPR_ARG;

Section Inherit

  + parent_itm_expr_local :Expanded ITM_EXPR_LOCAL;

Section Public

  + result :REG;

  - compile_in list:LIST :REG <-
  [
    -? { result != NULL };
    -? { result.is_valid };
  ]
  ( result );

Section ITM_SLOT

  - get_argument_variable :REG <-
  ( + t:TYPE;
    result := REG.clone;
    t := type.to_type;
    (t != NULL).if {
      result
        .make NULL static_type t
        .make_pretty_name name;
      ? { result.is_valid };
    } else {
      error(position, "Cannot resolve type for "+name);
    };
    result
  )
  [
    +? {result = Result};
    +? {(result.is_null) || {result.type != NULL}};
  ];

  - make (n:CSTRING, t:ITM_TYPE) :SELF <-
  (
    t.set_itm_parent Self;
    name := n;
    type := t;
    Self
  );

