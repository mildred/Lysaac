Compilation Process
===================

    CLUSTER.compile
      
      // Parsing: generate AST
      
      PROTOTYPE.parse
        PARSER.parse
        
      // Definition: close type definitions
        
      PROTOTYPE.define_in LIST_PROC
        ITM_PROTOTYPE.define_in LIST_PROC
          ITM_SLOT.define_in LIST_PROC
      
      // Compilation: create low level instructions
      // TODO: check errors
      
      PROTOTYPE.compile
      LIST_PROC.compile
        SLOT.compile LIST_PROC
          ITM_EXPR.compile_in LIST
            INSTR.make
            INSTR.error :ERR
          ITM_EXPR.result :EXPR
          EXPR.error
      
      // Link: ???
      
      PROTOTYPE.link
      LIST_PROC.link
        SLOT.link
          INSTR.link
      
      // Generate: generate LLVM code
      
      PROTOTYPE.generate GENERATOR
      LIST_PROC.generate GENERATOR
        SLOT.generate GENERATOR
          INSTR.generate GENERATOR
      
