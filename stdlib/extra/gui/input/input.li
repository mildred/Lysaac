///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Library                                //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header

  + name    := INPUT;


  - copyright   := "2003-2005 JÃ©rome Boutet, 2003-2007 Benoit Sonntag";
  
 
  
  - bibliography:="http://IsaacOS.com";
  - author      :="Sonntag Benoit (bsonntag@loria.fr)";
  - comment     :="Message.";

  - version :=1;  
  - date    :="2003/04";
  
Section Inherit  
  
  - parent_inbox:INBOX := INBOX;
  
Section SELF
  
  + list_client:LINKED_LIST(INBOX);
  
Section Public
  
  - is_actif:BOOLEAN;
  
  - add_client obj:INBOX <-
  ( + idx:INTEGER;
    (list_client = NULL).if {
      list_client := LINKED_LIST(INBOX).create;      
    };
    idx := list_client.fast_index_of obj start (list_client.lower);    
    (idx > list_client.upper).if {
      list_client.add_last obj;
    };
  );

  - sub_client obj:INBOX <-
  ( + idx:INTEGER;
    
    idx := list_client.fast_index_of obj start (list_client.lower);    
    (idx <= list_client.upper).if {
      list_client.remove idx;
    };
  );
  
  - make <-
  (
    deferred;
  );
  
  - acknowledge <-
  (
    deferred;
  );
