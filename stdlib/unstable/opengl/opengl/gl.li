// **** file generated by glspec2li ****
Section Header

  + name     := GL;
  - comment  := "OpenGL C Specification";

Section Inherit

  - parent_object:OBJECT := OBJECT;

Section Public

//
// OpenGL constant.
//

  - cst_gl_version_1_1:INTEGER <- 1;
  - cst_gl_accum:INTEGER <- 00100h;
  - cst_gl_load:INTEGER <- 00101h;
  - cst_gl_return:INTEGER <- 00102h;
  - cst_gl_mult:INTEGER <- 00103h;
  - cst_gl_add:INTEGER <- 00104h;
  - cst_gl_never:INTEGER <- 00200h;
  - cst_gl_less:INTEGER <- 00201h;
  - cst_gl_equal:INTEGER <- 00202h;
  - cst_gl_lequal:INTEGER <- 00203h;
  - cst_gl_greater:INTEGER <- 00204h;
  - cst_gl_notequal:INTEGER <- 00205h;
  - cst_gl_gequal:INTEGER <- 00206h;
  - cst_gl_always:INTEGER <- 00207h;
  - cst_gl_current_bit:INTEGER <- 000000001h;
  - cst_gl_point_bit:INTEGER <- 000000002h;
  - cst_gl_line_bit:INTEGER <- 000000004h;
  - cst_gl_polygon_bit:INTEGER <- 000000008h;
  - cst_gl_polygon_stipple_bit:INTEGER <- 000000010h;
  - cst_gl_pixel_mode_bit:INTEGER <- 000000020h;
  - cst_gl_lighting_bit:INTEGER <- 000000040h;
  - cst_gl_fog_bit:INTEGER <- 000000080h;
  - cst_gl_depth_buffer_bit:INTEGER <- 000000100h;
  - cst_gl_accum_buffer_bit:INTEGER <- 000000200h;
  - cst_gl_stencil_buffer_bit:INTEGER <- 000000400h;
  - cst_gl_viewport_bit:INTEGER <- 000000800h;
  - cst_gl_transform_bit:INTEGER <- 000001000h;
  - cst_gl_enable_bit:INTEGER <- 000002000h;
  - cst_gl_color_buffer_bit:INTEGER <- 000004000h;
  - cst_gl_hint_bit:INTEGER <- 000008000h;
  - cst_gl_eval_bit:INTEGER <- 000010000h;
  - cst_gl_list_bit:INTEGER <- 000020000h;
  - cst_gl_texture_bit:INTEGER <- 000040000h;
  - cst_gl_scissor_bit:INTEGER <- 000080000h;
  - cst_gl_all_attrib_bits:INTEGER <- 0000fffffh;
  - cst_gl_points:INTEGER <- 00000h;
  - cst_gl_lines:INTEGER <- 00001h;
  - cst_gl_line_loop:INTEGER <- 00002h;
  - cst_gl_line_strip:INTEGER <- 00003h;
  - cst_gl_triangles:INTEGER <- 00004h;
  - cst_gl_triangle_strip:INTEGER <- 00005h;
  - cst_gl_triangle_fan:INTEGER <- 00006h;
  - cst_gl_quads:INTEGER <- 00007h;
  - cst_gl_quad_strip:INTEGER <- 00008h;
  - cst_gl_polygon:INTEGER <- 00009h;
  - cst_gl_zero:INTEGER <- 0;
  - cst_gl_one:INTEGER <- 1;
  - cst_gl_src_color:INTEGER <- 00300h;
  - cst_gl_one_minus_src_color:INTEGER <- 00301h;
  - cst_gl_src_alpha:INTEGER <- 00302h;
  - cst_gl_one_minus_src_alpha:INTEGER <- 00303h;
  - cst_gl_dst_alpha:INTEGER <- 00304h;
  - cst_gl_one_minus_dst_alpha:INTEGER <- 00305h;
  - cst_gl_dst_color:INTEGER <- 00306h;
  - cst_gl_one_minus_dst_color:INTEGER <- 00307h;
  - cst_gl_src_alpha_saturate:INTEGER <- 00308h;
  - cst_gl_true:INTEGER <- 1;
  - cst_gl_false:INTEGER <- 0;
  - cst_gl_clip_plane0:INTEGER <- 03000h;
  - cst_gl_clip_plane1:INTEGER <- 03001h;
  - cst_gl_clip_plane2:INTEGER <- 03002h;
  - cst_gl_clip_plane3:INTEGER <- 03003h;
  - cst_gl_clip_plane4:INTEGER <- 03004h;
  - cst_gl_clip_plane5:INTEGER <- 03005h;
  - cst_gl_byte:INTEGER <- 01400h;
  - cst_gl_unsigned_byte:INTEGER <- 01401h;
  - cst_gl_short:INTEGER <- 01402h;
  - cst_gl_unsigned_short:INTEGER <- 01403h;
  - cst_gl_int:INTEGER <- 01404h;
  - cst_gl_unsigned_int:INTEGER <- 01405h;
  - cst_gl_float:INTEGER <- 01406h;
  - cst_gl_2_bytes:INTEGER <- 01407h;
  - cst_gl_3_bytes:INTEGER <- 01408h;
  - cst_gl_4_bytes:INTEGER <- 01409h;
  - cst_gl_double:INTEGER <- 0140Ah;
  - cst_gl_none:INTEGER <- 0;
  - cst_gl_front_left:INTEGER <- 00400h;
  - cst_gl_front_right:INTEGER <- 00401h;
  - cst_gl_back_left:INTEGER <- 00402h;
  - cst_gl_back_right:INTEGER <- 00403h;
  - cst_gl_front:INTEGER <- 00404h;
  - cst_gl_back:INTEGER <- 00405h;
  - cst_gl_left:INTEGER <- 00406h;
  - cst_gl_right:INTEGER <- 00407h;
  - cst_gl_front_and_back:INTEGER <- 00408h;
  - cst_gl_aux0:INTEGER <- 00409h;
  - cst_gl_aux1:INTEGER <- 0040Ah;
  - cst_gl_aux2:INTEGER <- 0040Bh;
  - cst_gl_aux3:INTEGER <- 0040Ch;
  - cst_gl_no_error:INTEGER <- 0;
  - cst_gl_invalid_enum:INTEGER <- 00500h;
  - cst_gl_invalid_value:INTEGER <- 00501h;
  - cst_gl_invalid_operation:INTEGER <- 00502h;
  - cst_gl_stack_overflow:INTEGER <- 00503h;
  - cst_gl_stack_underflow:INTEGER <- 00504h;
  - cst_gl_out_of_memory:INTEGER <- 00505h;
  - cst_gl_2d:INTEGER <- 00600h;
  - cst_gl_3d:INTEGER <- 00601h;
  - cst_gl_3d_color:INTEGER <- 00602h;
  - cst_gl_3d_color_texture:INTEGER <- 00603h;
  - cst_gl_4d_color_texture:INTEGER <- 00604h;
  - cst_gl_pass_through_token:INTEGER <- 00700h;
  - cst_gl_point_token:INTEGER <- 00701h;
  - cst_gl_line_token:INTEGER <- 00702h;
  - cst_gl_polygon_token:INTEGER <- 00703h;
  - cst_gl_bitmap_token:INTEGER <- 00704h;
  - cst_gl_draw_pixel_token:INTEGER <- 00705h;
  - cst_gl_copy_pixel_token:INTEGER <- 00706h;
  - cst_gl_line_reset_token:INTEGER <- 00707h;
  - cst_gl_exp:INTEGER <- 00800h;
  - cst_gl_exp2:INTEGER <- 00801h;
  - cst_gl_cw:INTEGER <- 00900h;
  - cst_gl_ccw:INTEGER <- 00901h;
  - cst_gl_coeff:INTEGER <- 00A00h;
  - cst_gl_order:INTEGER <- 00A01h;
  - cst_gl_domain:INTEGER <- 00A02h;
  - cst_gl_current_color:INTEGER <- 00B00h;
  - cst_gl_current_index:INTEGER <- 00B01h;
  - cst_gl_current_normal:INTEGER <- 00B02h;
  - cst_gl_current_texture_coords:INTEGER <- 00B03h;
  - cst_gl_current_raster_color:INTEGER <- 00B04h;
  - cst_gl_current_raster_index:INTEGER <- 00B05h;
  - cst_gl_current_raster_texture_coords:INTEGER <- 00B06h;
  - cst_gl_current_raster_position:INTEGER <- 00B07h;
  - cst_gl_current_raster_position_valid:INTEGER <- 00B08h;
  - cst_gl_current_raster_distance:INTEGER <- 00B09h;
  - cst_gl_point_smooth:INTEGER <- 00B10h;
  - cst_gl_point_size:INTEGER <- 00B11h;
  - cst_gl_point_size_range:INTEGER <- 00B12h;
  - cst_gl_point_size_granularity:INTEGER <- 00B13h;
  - cst_gl_line_smooth:INTEGER <- 00B20h;
  - cst_gl_line_width:INTEGER <- 00B21h;
  - cst_gl_line_width_range:INTEGER <- 00B22h;
  - cst_gl_line_width_granularity:INTEGER <- 00B23h;
  - cst_gl_line_stipple:INTEGER <- 00B24h;
  - cst_gl_line_stipple_pattern:INTEGER <- 00B25h;
  - cst_gl_line_stipple_repeat:INTEGER <- 00B26h;
  - cst_gl_list_mode:INTEGER <- 00B30h;
  - cst_gl_max_list_nesting:INTEGER <- 00B31h;
  - cst_gl_list_base:INTEGER <- 00B32h;
  - cst_gl_list_index:INTEGER <- 00B33h;
  - cst_gl_polygon_mode:INTEGER <- 00B40h;
  - cst_gl_polygon_smooth:INTEGER <- 00B41h;
  - cst_gl_polygon_stipple:INTEGER <- 00B42h;
  - cst_gl_edge_flag:INTEGER <- 00B43h;
  - cst_gl_cull_face:INTEGER <- 00B44h;
  - cst_gl_cull_face_mode:INTEGER <- 00B45h;
  - cst_gl_front_face:INTEGER <- 00B46h;
  - cst_gl_lighting:INTEGER <- 00B50h;
  - cst_gl_light_model_local_viewer:INTEGER <- 00B51h;
  - cst_gl_light_model_two_side:INTEGER <- 00B52h;
  - cst_gl_light_model_ambient:INTEGER <- 00B53h;
  - cst_gl_shade_model:INTEGER <- 00B54h;
  - cst_gl_color_material_face:INTEGER <- 00B55h;
  - cst_gl_color_material_parameter:INTEGER <- 00B56h;
  - cst_gl_color_material:INTEGER <- 00B57h;
  - cst_gl_fog:INTEGER <- 00B60h;
  - cst_gl_fog_index:INTEGER <- 00B61h;
  - cst_gl_fog_density:INTEGER <- 00B62h;
  - cst_gl_fog_start:INTEGER <- 00B63h;
  - cst_gl_fog_end:INTEGER <- 00B64h;
  - cst_gl_fog_mode:INTEGER <- 00B65h;
  - cst_gl_fog_color:INTEGER <- 00B66h;
  - cst_gl_depth_range:INTEGER <- 00B70h;
  - cst_gl_depth_test:INTEGER <- 00B71h;
  - cst_gl_depth_writemask:INTEGER <- 00B72h;
  - cst_gl_depth_clear_value:INTEGER <- 00B73h;
  - cst_gl_depth_func:INTEGER <- 00B74h;
  - cst_gl_accum_clear_value:INTEGER <- 00B80h;
  - cst_gl_stencil_test:INTEGER <- 00B90h;
  - cst_gl_stencil_clear_value:INTEGER <- 00B91h;
  - cst_gl_stencil_func:INTEGER <- 00B92h;
  - cst_gl_stencil_value_mask:INTEGER <- 00B93h;
  - cst_gl_stencil_fail:INTEGER <- 00B94h;
  - cst_gl_stencil_pass_depth_fail:INTEGER <- 00B95h;
  - cst_gl_stencil_pass_depth_pass:INTEGER <- 00B96h;
  - cst_gl_stencil_ref:INTEGER <- 00B97h;
  - cst_gl_stencil_writemask:INTEGER <- 00B98h;
  - cst_gl_matrix_mode:INTEGER <- 00BA0h;
  - cst_gl_normalize:INTEGER <- 00BA1h;
  - cst_gl_viewport:INTEGER <- 00BA2h;
  - cst_gl_modelview_stack_depth:INTEGER <- 00BA3h;
  - cst_gl_projection_stack_depth:INTEGER <- 00BA4h;
  - cst_gl_texture_stack_depth:INTEGER <- 00BA5h;
  - cst_gl_modelview_matrix:INTEGER <- 00BA6h;
  - cst_gl_projection_matrix:INTEGER <- 00BA7h;
  - cst_gl_texture_matrix:INTEGER <- 00BA8h;
  - cst_gl_attrib_stack_depth:INTEGER <- 00BB0h;
  - cst_gl_client_attrib_stack_depth:INTEGER <- 00BB1h;
  - cst_gl_alpha_test:INTEGER <- 00BC0h;
  - cst_gl_alpha_test_func:INTEGER <- 00BC1h;
  - cst_gl_alpha_test_ref:INTEGER <- 00BC2h;
  - cst_gl_dither:INTEGER <- 00BD0h;
  - cst_gl_blend_dst:INTEGER <- 00BE0h;
  - cst_gl_blend_src:INTEGER <- 00BE1h;
  - cst_gl_blend:INTEGER <- 00BE2h;
  - cst_gl_logic_op_mode:INTEGER <- 00BF0h;
  - cst_gl_index_logic_op:INTEGER <- 00BF1h;
  - cst_gl_color_logic_op:INTEGER <- 00BF2h;
  - cst_gl_aux_buffers:INTEGER <- 00C00h;
  - cst_gl_draw_buffer:INTEGER <- 00C01h;
  - cst_gl_read_buffer:INTEGER <- 00C02h;
  - cst_gl_scissor_box:INTEGER <- 00C10h;
  - cst_gl_scissor_test:INTEGER <- 00C11h;
  - cst_gl_index_clear_value:INTEGER <- 00C20h;
  - cst_gl_index_writemask:INTEGER <- 00C21h;
  - cst_gl_color_clear_value:INTEGER <- 00C22h;
  - cst_gl_color_writemask:INTEGER <- 00C23h;
  - cst_gl_index_mode:INTEGER <- 00C30h;
  - cst_gl_rgba_mode:INTEGER <- 00C31h;
  - cst_gl_doublebuffer:INTEGER <- 00C32h;
  - cst_gl_stereo:INTEGER <- 00C33h;
  - cst_gl_render_mode:INTEGER <- 00C40h;
  - cst_gl_perspective_correction_hint:INTEGER <- 00C50h;
  - cst_gl_point_smooth_hint:INTEGER <- 00C51h;
  - cst_gl_line_smooth_hint:INTEGER <- 00C52h;
  - cst_gl_polygon_smooth_hint:INTEGER <- 00C53h;
  - cst_gl_fog_hint:INTEGER <- 00C54h;
  - cst_gl_texture_gen_s:INTEGER <- 00C60h;
  - cst_gl_texture_gen_t:INTEGER <- 00C61h;
  - cst_gl_texture_gen_r:INTEGER <- 00C62h;
  - cst_gl_texture_gen_q:INTEGER <- 00C63h;
  - cst_gl_pixel_map_i_to_i:INTEGER <- 00C70h;
  - cst_gl_pixel_map_s_to_s:INTEGER <- 00C71h;
  - cst_gl_pixel_map_i_to_r:INTEGER <- 00C72h;
  - cst_gl_pixel_map_i_to_g:INTEGER <- 00C73h;
  - cst_gl_pixel_map_i_to_b:INTEGER <- 00C74h;
  - cst_gl_pixel_map_i_to_a:INTEGER <- 00C75h;
  - cst_gl_pixel_map_r_to_r:INTEGER <- 00C76h;
  - cst_gl_pixel_map_g_to_g:INTEGER <- 00C77h;
  - cst_gl_pixel_map_b_to_b:INTEGER <- 00C78h;
  - cst_gl_pixel_map_a_to_a:INTEGER <- 00C79h;
  - cst_gl_pixel_map_i_to_i_size:INTEGER <- 00CB0h;
  - cst_gl_pixel_map_s_to_s_size:INTEGER <- 00CB1h;
  - cst_gl_pixel_map_i_to_r_size:INTEGER <- 00CB2h;
  - cst_gl_pixel_map_i_to_g_size:INTEGER <- 00CB3h;
  - cst_gl_pixel_map_i_to_b_size:INTEGER <- 00CB4h;
  - cst_gl_pixel_map_i_to_a_size:INTEGER <- 00CB5h;
  - cst_gl_pixel_map_r_to_r_size:INTEGER <- 00CB6h;
  - cst_gl_pixel_map_g_to_g_size:INTEGER <- 00CB7h;
  - cst_gl_pixel_map_b_to_b_size:INTEGER <- 00CB8h;
  - cst_gl_pixel_map_a_to_a_size:INTEGER <- 00CB9h;
  - cst_gl_unpack_swap_bytes:INTEGER <- 00CF0h;
  - cst_gl_unpack_lsb_first:INTEGER <- 00CF1h;
  - cst_gl_unpack_row_length:INTEGER <- 00CF2h;
  - cst_gl_unpack_skip_rows:INTEGER <- 00CF3h;
  - cst_gl_unpack_skip_pixels:INTEGER <- 00CF4h;
  - cst_gl_unpack_alignment:INTEGER <- 00CF5h;
  - cst_gl_pack_swap_bytes:INTEGER <- 00D00h;
  - cst_gl_pack_lsb_first:INTEGER <- 00D01h;
  - cst_gl_pack_row_length:INTEGER <- 00D02h;
  - cst_gl_pack_skip_rows:INTEGER <- 00D03h;
  - cst_gl_pack_skip_pixels:INTEGER <- 00D04h;
  - cst_gl_pack_alignment:INTEGER <- 00D05h;
  - cst_gl_map_color:INTEGER <- 00D10h;
  - cst_gl_map_stencil:INTEGER <- 00D11h;
  - cst_gl_index_shift:INTEGER <- 00D12h;
  - cst_gl_index_offset:INTEGER <- 00D13h;
  - cst_gl_red_scale:INTEGER <- 00D14h;
  - cst_gl_red_bias:INTEGER <- 00D15h;
  - cst_gl_zoom_x:INTEGER <- 00D16h;
  - cst_gl_zoom_y:INTEGER <- 00D17h;
  - cst_gl_green_scale:INTEGER <- 00D18h;
  - cst_gl_green_bias:INTEGER <- 00D19h;
  - cst_gl_blue_scale:INTEGER <- 00D1Ah;
  - cst_gl_blue_bias:INTEGER <- 00D1Bh;
  - cst_gl_alpha_scale:INTEGER <- 00D1Ch;
  - cst_gl_alpha_bias:INTEGER <- 00D1Dh;
  - cst_gl_depth_scale:INTEGER <- 00D1Eh;
  - cst_gl_depth_bias:INTEGER <- 00D1Fh;
  - cst_gl_max_eval_order:INTEGER <- 00D30h;
  - cst_gl_max_lights:INTEGER <- 00D31h;
  - cst_gl_max_clip_planes:INTEGER <- 00D32h;
  - cst_gl_max_texture_size:INTEGER <- 00D33h;
  - cst_gl_max_pixel_map_table:INTEGER <- 00D34h;
  - cst_gl_max_attrib_stack_depth:INTEGER <- 00D35h;
  - cst_gl_max_modelview_stack_depth:INTEGER <- 00D36h;
  - cst_gl_max_name_stack_depth:INTEGER <- 00D37h;
  - cst_gl_max_projection_stack_depth:INTEGER <- 00D38h;
  - cst_gl_max_texture_stack_depth:INTEGER <- 00D39h;
  - cst_gl_max_viewport_dims:INTEGER <- 00D3Ah;
  - cst_gl_max_client_attrib_stack_depth:INTEGER <- 00D3Bh;
  - cst_gl_subpixel_bits:INTEGER <- 00D50h;
  - cst_gl_index_bits:INTEGER <- 00D51h;
  - cst_gl_red_bits:INTEGER <- 00D52h;
  - cst_gl_green_bits:INTEGER <- 00D53h;
  - cst_gl_blue_bits:INTEGER <- 00D54h;
  - cst_gl_alpha_bits:INTEGER <- 00D55h;
  - cst_gl_depth_bits:INTEGER <- 00D56h;
  - cst_gl_stencil_bits:INTEGER <- 00D57h;
  - cst_gl_accum_red_bits:INTEGER <- 00D58h;
  - cst_gl_accum_green_bits:INTEGER <- 00D59h;
  - cst_gl_accum_blue_bits:INTEGER <- 00D5Ah;
  - cst_gl_accum_alpha_bits:INTEGER <- 00D5Bh;
  - cst_gl_name_stack_depth:INTEGER <- 00D70h;
  - cst_gl_auto_normal:INTEGER <- 00D80h;
  - cst_gl_map1_color_4:INTEGER <- 00D90h;
  - cst_gl_map1_index:INTEGER <- 00D91h;
  - cst_gl_map1_normal:INTEGER <- 00D92h;
  - cst_gl_map1_texture_coord_1:INTEGER <- 00D93h;
  - cst_gl_map1_texture_coord_2:INTEGER <- 00D94h;
  - cst_gl_map1_texture_coord_3:INTEGER <- 00D95h;
  - cst_gl_map1_texture_coord_4:INTEGER <- 00D96h;
  - cst_gl_map1_vertex_3:INTEGER <- 00D97h;
  - cst_gl_map1_vertex_4:INTEGER <- 00D98h;
  - cst_gl_map2_color_4:INTEGER <- 00DB0h;
  - cst_gl_map2_index:INTEGER <- 00DB1h;
  - cst_gl_map2_normal:INTEGER <- 00DB2h;
  - cst_gl_map2_texture_coord_1:INTEGER <- 00DB3h;
  - cst_gl_map2_texture_coord_2:INTEGER <- 00DB4h;
  - cst_gl_map2_texture_coord_3:INTEGER <- 00DB5h;
  - cst_gl_map2_texture_coord_4:INTEGER <- 00DB6h;
  - cst_gl_map2_vertex_3:INTEGER <- 00DB7h;
  - cst_gl_map2_vertex_4:INTEGER <- 00DB8h;
  - cst_gl_map1_grid_domain:INTEGER <- 00DD0h;
  - cst_gl_map1_grid_segments:INTEGER <- 00DD1h;
  - cst_gl_map2_grid_domain:INTEGER <- 00DD2h;
  - cst_gl_map2_grid_segments:INTEGER <- 00DD3h;
  - cst_gl_texture_1d:INTEGER <- 00DE0h;
  - cst_gl_texture_2d:INTEGER <- 00DE1h;
  - cst_gl_feedback_buffer_pointer:INTEGER <- 00DF0h;
  - cst_gl_feedback_buffer_size:INTEGER <- 00DF1h;
  - cst_gl_feedback_buffer_type:INTEGER <- 00DF2h;
  - cst_gl_selection_buffer_pointer:INTEGER <- 00DF3h;
  - cst_gl_selection_buffer_size:INTEGER <- 00DF4h;
  - cst_gl_texture_width:INTEGER <- 01000h;
  - cst_gl_texture_height:INTEGER <- 01001h;
  - cst_gl_texture_internal_format:INTEGER <- 01003h;
  - cst_gl_texture_border_color:INTEGER <- 01004h;
  - cst_gl_texture_border:INTEGER <- 01005h;
  - cst_gl_dont_care:INTEGER <- 01100h;
  - cst_gl_fastest:INTEGER <- 01101h;
  - cst_gl_nicest:INTEGER <- 01102h;
  - cst_gl_light0:INTEGER <- 04000h;
  - cst_gl_light1:INTEGER <- 04001h;
  - cst_gl_light2:INTEGER <- 04002h;
  - cst_gl_light3:INTEGER <- 04003h;
  - cst_gl_light4:INTEGER <- 04004h;
  - cst_gl_light5:INTEGER <- 04005h;
  - cst_gl_light6:INTEGER <- 04006h;
  - cst_gl_light7:INTEGER <- 04007h;
  - cst_gl_ambient:INTEGER <- 01200h;
  - cst_gl_diffuse:INTEGER <- 01201h;
  - cst_gl_specular:INTEGER <- 01202h;
  - cst_gl_position:INTEGER <- 01203h;
  - cst_gl_spot_direction:INTEGER <- 01204h;
  - cst_gl_spot_exponent:INTEGER <- 01205h;
  - cst_gl_spot_cutoff:INTEGER <- 01206h;
  - cst_gl_constant_attenuation:INTEGER <- 01207h;
  - cst_gl_linear_attenuation:INTEGER <- 01208h;
  - cst_gl_quadratic_attenuation:INTEGER <- 01209h;
  - cst_gl_compile:INTEGER <- 01300h;
  - cst_gl_compile_and_execute:INTEGER <- 01301h;
  - cst_gl_clear:INTEGER <- 01500h;
  - cst_gl_and:INTEGER <- 01501h;
  - cst_gl_and_reverse:INTEGER <- 01502h;
  - cst_gl_copy:INTEGER <- 01503h;
  - cst_gl_and_inverted:INTEGER <- 01504h;
  - cst_gl_noop:INTEGER <- 01505h;
  - cst_gl_xor:INTEGER <- 01506h;
  - cst_gl_or:INTEGER <- 01507h;
  - cst_gl_nor:INTEGER <- 01508h;
  - cst_gl_equiv:INTEGER <- 01509h;
  - cst_gl_invert:INTEGER <- 0150Ah;
  - cst_gl_or_reverse:INTEGER <- 0150Bh;
  - cst_gl_copy_inverted:INTEGER <- 0150Ch;
  - cst_gl_or_inverted:INTEGER <- 0150Dh;
  - cst_gl_nand:INTEGER <- 0150Eh;
  - cst_gl_set:INTEGER <- 0150Fh;
  - cst_gl_emission:INTEGER <- 01600h;
  - cst_gl_shininess:INTEGER <- 01601h;
  - cst_gl_ambient_and_diffuse:INTEGER <- 01602h;
  - cst_gl_color_indexes:INTEGER <- 01603h;
  - cst_gl_modelview:INTEGER <- 01700h;
  - cst_gl_projection:INTEGER <- 01701h;
  - cst_gl_texture:INTEGER <- 01702h;
  - cst_gl_color:INTEGER <- 01800h;
  - cst_gl_depth:INTEGER <- 01801h;
  - cst_gl_stencil:INTEGER <- 01802h;
  - cst_gl_color_index:INTEGER <- 01900h;
  - cst_gl_stencil_index:INTEGER <- 01901h;
  - cst_gl_depth_component:INTEGER <- 01902h;
  - cst_gl_red:INTEGER <- 01903h;
  - cst_gl_green:INTEGER <- 01904h;
  - cst_gl_blue:INTEGER <- 01905h;
  - cst_gl_alpha:INTEGER <- 01906h;
  - cst_gl_rgb:INTEGER <- 01907h;
  - cst_gl_rgba:INTEGER <- 01908h;
  - cst_gl_luminance:INTEGER <- 01909h;
  - cst_gl_luminance_alpha:INTEGER <- 0190Ah;
  - cst_gl_bitmap:INTEGER <- 01A00h;
  - cst_gl_point:INTEGER <- 01B00h;
  - cst_gl_line:INTEGER <- 01B01h;
  - cst_gl_fill:INTEGER <- 01B02h;
  - cst_gl_render:INTEGER <- 01C00h;
  - cst_gl_feedback:INTEGER <- 01C01h;
  - cst_gl_select:INTEGER <- 01C02h;
  - cst_gl_flat:INTEGER <- 01D00h;
  - cst_gl_smooth:INTEGER <- 01D01h;
  - cst_gl_keep:INTEGER <- 01E00h;
  - cst_gl_replace:INTEGER <- 01E01h;
  - cst_gl_incr:INTEGER <- 01E02h;
  - cst_gl_decr:INTEGER <- 01E03h;
  - cst_gl_vendor:INTEGER <- 01F00h;
  - cst_gl_renderer:INTEGER <- 01F01h;
  - cst_gl_version:INTEGER <- 01F02h;
  - cst_gl_extensions:INTEGER <- 01F03h;
  - cst_gl_s:INTEGER <- 02000h;
  - cst_gl_t:INTEGER <- 02001h;
  - cst_gl_r:INTEGER <- 02002h;
  - cst_gl_q:INTEGER <- 02003h;
  - cst_gl_modulate:INTEGER <- 02100h;
  - cst_gl_decal:INTEGER <- 02101h;
  - cst_gl_texture_env_mode:INTEGER <- 02200h;
  - cst_gl_texture_env_color:INTEGER <- 02201h;
  - cst_gl_texture_env:INTEGER <- 02300h;
  - cst_gl_eye_linear:INTEGER <- 02400h;
  - cst_gl_object_linear:INTEGER <- 02401h;
  - cst_gl_sphere_map:INTEGER <- 02402h;
  - cst_gl_texture_gen_mode:INTEGER <- 02500h;
  - cst_gl_object_plane:INTEGER <- 02501h;
  - cst_gl_eye_plane:INTEGER <- 02502h;
  - cst_gl_nearest:INTEGER <- 02600h;
  - cst_gl_linear:INTEGER <- 02601h;
  - cst_gl_nearest_mipmap_nearest:INTEGER <- 02700h;
  - cst_gl_linear_mipmap_nearest:INTEGER <- 02701h;
  - cst_gl_nearest_mipmap_linear:INTEGER <- 02702h;
  - cst_gl_linear_mipmap_linear:INTEGER <- 02703h;
  - cst_gl_texture_mag_filter:INTEGER <- 02800h;
  - cst_gl_texture_min_filter:INTEGER <- 02801h;
  - cst_gl_texture_wrap_s:INTEGER <- 02802h;
  - cst_gl_texture_wrap_t:INTEGER <- 02803h;
  - cst_gl_clamp:INTEGER <- 02900h;
  - cst_gl_repeat:INTEGER <- 02901h;
  - cst_gl_client_pixel_store_bit:INTEGER <- 000000001h;
  - cst_gl_client_vertex_array_bit:INTEGER <- 000000002h;
  - cst_gl_client_all_attrib_bits:INTEGER <- 0ffffffffh;
  - cst_gl_polygon_offset_factor:INTEGER <- 08038h;
  - cst_gl_polygon_offset_units:INTEGER <- 02A00h;
  - cst_gl_polygon_offset_point:INTEGER <- 02A01h;
  - cst_gl_polygon_offset_line:INTEGER <- 02A02h;
  - cst_gl_polygon_offset_fill:INTEGER <- 08037h;
  - cst_gl_alpha4:INTEGER <- 0803Bh;
  - cst_gl_alpha8:INTEGER <- 0803Ch;
  - cst_gl_alpha12:INTEGER <- 0803Dh;
  - cst_gl_alpha16:INTEGER <- 0803Eh;
  - cst_gl_luminance4:INTEGER <- 0803Fh;
  - cst_gl_luminance8:INTEGER <- 08040h;
  - cst_gl_luminance12:INTEGER <- 08041h;
  - cst_gl_luminance16:INTEGER <- 08042h;
  - cst_gl_luminance4_alpha4:INTEGER <- 08043h;
  - cst_gl_luminance6_alpha2:INTEGER <- 08044h;
  - cst_gl_luminance8_alpha8:INTEGER <- 08045h;
  - cst_gl_luminance12_alpha4:INTEGER <- 08046h;
  - cst_gl_luminance12_alpha12:INTEGER <- 08047h;
  - cst_gl_luminance16_alpha16:INTEGER <- 08048h;
  - cst_gl_intensity:INTEGER <- 08049h;
  - cst_gl_intensity4:INTEGER <- 0804Ah;
  - cst_gl_intensity8:INTEGER <- 0804Bh;
  - cst_gl_intensity12:INTEGER <- 0804Ch;
  - cst_gl_intensity16:INTEGER <- 0804Dh;
  - cst_gl_r3_g3_b2:INTEGER <- 02A10h;
  - cst_gl_rgb4:INTEGER <- 0804Fh;
  - cst_gl_rgb5:INTEGER <- 08050h;
  - cst_gl_rgb8:INTEGER <- 08051h;
  - cst_gl_rgb10:INTEGER <- 08052h;
  - cst_gl_rgb12:INTEGER <- 08053h;
  - cst_gl_rgb16:INTEGER <- 08054h;
  - cst_gl_rgba2:INTEGER <- 08055h;
  - cst_gl_rgba4:INTEGER <- 08056h;
  - cst_gl_rgb5_a1:INTEGER <- 08057h;
  - cst_gl_rgba8:INTEGER <- 08058h;
  - cst_gl_rgb10_a2:INTEGER <- 08059h;
  - cst_gl_rgba12:INTEGER <- 0805Ah;
  - cst_gl_rgba16:INTEGER <- 0805Bh;
  - cst_gl_texture_red_size:INTEGER <- 0805Ch;
  - cst_gl_texture_green_size:INTEGER <- 0805Dh;
  - cst_gl_texture_blue_size:INTEGER <- 0805Eh;
  - cst_gl_texture_alpha_size:INTEGER <- 0805Fh;
  - cst_gl_texture_luminance_size:INTEGER <- 08060h;
  - cst_gl_texture_intensity_size:INTEGER <- 08061h;
  - cst_gl_proxy_texture_1d:INTEGER <- 08063h;
  - cst_gl_proxy_texture_2d:INTEGER <- 08064h;
  - cst_gl_texture_priority:INTEGER <- 08066h;
  - cst_gl_texture_resident:INTEGER <- 08067h;
  - cst_gl_texture_binding_1d:INTEGER <- 08068h;
  - cst_gl_texture_binding_2d:INTEGER <- 08069h;
  - cst_gl_vertex_array:INTEGER <- 08074h;
  - cst_gl_normal_array:INTEGER <- 08075h;
  - cst_gl_color_array:INTEGER <- 08076h;
  - cst_gl_index_array:INTEGER <- 08077h;
  - cst_gl_texture_coord_array:INTEGER <- 08078h;
  - cst_gl_edge_flag_array:INTEGER <- 08079h;
  - cst_gl_vertex_array_size:INTEGER <- 0807Ah;
  - cst_gl_vertex_array_type:INTEGER <- 0807Bh;
  - cst_gl_vertex_array_stride:INTEGER <- 0807Ch;
  - cst_gl_normal_array_type:INTEGER <- 0807Eh;
  - cst_gl_normal_array_stride:INTEGER <- 0807Fh;
  - cst_gl_color_array_size:INTEGER <- 08081h;
  - cst_gl_color_array_type:INTEGER <- 08082h;
  - cst_gl_color_array_stride:INTEGER <- 08083h;
  - cst_gl_index_array_type:INTEGER <- 08085h;
  - cst_gl_index_array_stride:INTEGER <- 08086h;
  - cst_gl_texture_coord_array_size:INTEGER <- 08088h;
  - cst_gl_texture_coord_array_type:INTEGER <- 08089h;
  - cst_gl_texture_coord_array_stride:INTEGER <- 0808Ah;
  - cst_gl_edge_flag_array_stride:INTEGER <- 0808Ch;
  - cst_gl_vertex_array_pointer:INTEGER <- 0808Eh;
  - cst_gl_normal_array_pointer:INTEGER <- 0808Fh;
  - cst_gl_color_array_pointer:INTEGER <- 08090h;
  - cst_gl_index_array_pointer:INTEGER <- 08091h;
  - cst_gl_texture_coord_array_pointer:INTEGER <- 08092h;
  - cst_gl_edge_flag_array_pointer:INTEGER <- 08093h;
  - cst_gl_v2f:INTEGER <- 02A20h;
  - cst_gl_v3f:INTEGER <- 02A21h;
  - cst_gl_c4ub_v2f:INTEGER <- 02A22h;
  - cst_gl_c4ub_v3f:INTEGER <- 02A23h;
  - cst_gl_c3f_v3f:INTEGER <- 02A24h;
  - cst_gl_n3f_v3f:INTEGER <- 02A25h;
  - cst_gl_c4f_n3f_v3f:INTEGER <- 02A26h;
  - cst_gl_t2f_v3f:INTEGER <- 02A27h;
  - cst_gl_t4f_v4f:INTEGER <- 02A28h;
  - cst_gl_t2f_c4ub_v3f:INTEGER <- 02A29h;
  - cst_gl_t2f_c3f_v3f:INTEGER <- 02A2Ah;
  - cst_gl_t2f_n3f_v3f:INTEGER <- 02A2Bh;
  - cst_gl_t2f_c4f_n3f_v3f:INTEGER <- 02A2Ch;
  - cst_gl_t4f_c4f_n3f_v4f:INTEGER <- 02A2Dh;
  - cst_gl_ext_vertex_array:INTEGER <- 1;
  - cst_gl_win_swap_hint:INTEGER <- 1;
  - cst_gl_ext_bgra:INTEGER <- 1;
  - cst_gl_ext_paletted_texture:INTEGER <- 1;
  - cst_gl_vertex_array_ext:INTEGER <- 08074h;
  - cst_gl_normal_array_ext:INTEGER <- 08075h;
  - cst_gl_color_array_ext:INTEGER <- 08076h;
  - cst_gl_index_array_ext:INTEGER <- 08077h;
  - cst_gl_texture_coord_array_ext:INTEGER <- 08078h;
  - cst_gl_edge_flag_array_ext:INTEGER <- 08079h;
  - cst_gl_vertex_array_size_ext:INTEGER <- 0807Ah;
  - cst_gl_vertex_array_type_ext:INTEGER <- 0807Bh;
  - cst_gl_vertex_array_stride_ext:INTEGER <- 0807Ch;
  - cst_gl_vertex_array_count_ext:INTEGER <- 0807Dh;
  - cst_gl_normal_array_type_ext:INTEGER <- 0807Eh;
  - cst_gl_normal_array_stride_ext:INTEGER <- 0807Fh;
  - cst_gl_normal_array_count_ext:INTEGER <- 08080h;
  - cst_gl_color_array_size_ext:INTEGER <- 08081h;
  - cst_gl_color_array_type_ext:INTEGER <- 08082h;
  - cst_gl_color_array_stride_ext:INTEGER <- 08083h;
  - cst_gl_color_array_count_ext:INTEGER <- 08084h;
  - cst_gl_index_array_type_ext:INTEGER <- 08085h;
  - cst_gl_index_array_stride_ext:INTEGER <- 08086h;
  - cst_gl_index_array_count_ext:INTEGER <- 08087h;
  - cst_gl_texture_coord_array_size_ext:INTEGER <- 08088h;
  - cst_gl_texture_coord_array_type_ext:INTEGER <- 08089h;
  - cst_gl_texture_coord_array_stride_ext:INTEGER <- 0808Ah;
  - cst_gl_texture_coord_array_count_ext:INTEGER <- 0808Bh;
  - cst_gl_edge_flag_array_stride_ext:INTEGER <- 0808Ch;
  - cst_gl_edge_flag_array_count_ext:INTEGER <- 0808Dh;
  - cst_gl_vertex_array_pointer_ext:INTEGER <- 0808Eh;
  - cst_gl_normal_array_pointer_ext:INTEGER <- 0808Fh;
  - cst_gl_color_array_pointer_ext:INTEGER <- 08090h;
  - cst_gl_index_array_pointer_ext:INTEGER <- 08091h;
  - cst_gl_texture_coord_array_pointer_ext:INTEGER <- 08092h;
  - cst_gl_edge_flag_array_pointer_ext:INTEGER <- 08093h;
  - cst_gl_bgr_ext:INTEGER <- 080E0h;
  - cst_gl_bgra_ext:INTEGER <- 080E1h;
  - cst_gl_color_table_format_ext:INTEGER <- 080D8h;
  - cst_gl_color_table_width_ext:INTEGER <- 080D9h;
  - cst_gl_color_table_red_size_ext:INTEGER <- 080DAh;
  - cst_gl_color_table_green_size_ext:INTEGER <- 080DBh;
  - cst_gl_color_table_blue_size_ext:INTEGER <- 080DCh;
  - cst_gl_color_table_alpha_size_ext:INTEGER <- 080DDh;
  - cst_gl_color_table_luminance_size_ext:INTEGER <- 080DEh;
  - cst_gl_color_table_intensity_size_ext:INTEGER <- 080DFh;
  - cst_gl_color_index1_ext:INTEGER <- 080E2h;
  - cst_gl_color_index2_ext:INTEGER <- 080E3h;
  - cst_gl_color_index4_ext:INTEGER <- 080E4h;
  - cst_gl_color_index8_ext:INTEGER <- 080E5h;
  - cst_gl_color_index12_ext:INTEGER <- 080E6h;
  - cst_gl_color_index16_ext:INTEGER <- 080E7h;
//
// OpenGL functions.
//

  - gl_accum (op:UINTEGER_32, value:REAL_32) <- `glAccum(@op,@value)`;
  - gl_alpha_func (func:UINTEGER_32, ref:REAL_32) <- `glAlphaFunc(@func,@ref)`;
  - gl_are_textures_resident (n:INTEGER, textures:POINTER, residences:POINTER) :UINTEGER_8 <- `glAreTexturesResident(@n,@textures,@residences)`:UINTEGER_8;
  - gl_array_element (i:INTEGER) <- `glArrayElement(@i)`;
  - gl_begin (mode:UINTEGER_32) <- `glBegin(@mode)`;
  - gl_bind_texture (target:UINTEGER_32, texture:UINTEGER_32) <- `glBindTexture(@target,@texture)`;
  - gl_bitmap (width:INTEGER, height:INTEGER, xorig:REAL_32, yorig:REAL_32, xmove:REAL_32, ymove:REAL_32, bitmap:POINTER)
 <- `glBitmap(@width,@height,@xorig,@yorig,@xmove,@ymove,@bitmap)`;
  - gl_blend_func (sfactor:UINTEGER_32, dfactor:UINTEGER_32) <- `glBlendFunc(@sfactor,@dfactor)`;
  - gl_call_list (list:UINTEGER_32) <- `glCallList(@list)`;
  - gl_call_lists (n:INTEGER, type:UINTEGER_32, lists:POINTER) <- `glCallLists(@n,@type,@lists)`;
  - gl_clear (mask:UINTEGER_32) <- `glClear(@mask)`;
  - gl_clear_accum (red:REAL_32, green:REAL_32, blue:REAL_32, alpha:REAL_32) <- `glClearAccum(@red,@green,@blue,@alpha)`;
  - gl_clear_color (red:REAL_32, green:REAL_32, blue:REAL_32, alpha:REAL_32) <- `glClearColor(@red,@green,@blue,@alpha)`;
  - gl_clear_depth (depth:REAL_32) <- `glClearDepth(@depth)`;
  - gl_clear_index (c:REAL_32) <- `glClearIndex(@c)`;
  - gl_clear_stencil (s:INTEGER) <- `glClearStencil(@s)`;
  - gl_clip_plane (plane:UINTEGER_32, equation:POINTER) <- `glClipPlane(@plane,@equation)`;
  - gl_color3b (red:INTEGER_8, green:INTEGER_8, blue:INTEGER_8) <- `glColor3b(@red,@green,@blue)`;
  - gl_color3bv (v:POINTER) <- `glColor3bv(@v)`;
  - gl_color3d (red:REAL_32, green:REAL_32, blue:REAL_32) <- `glColor3d(@red,@green,@blue)`;
  - gl_color3dv (v:POINTER) <- `glColor3dv(@v)`;
  - gl_color3f (red:REAL_32, green:REAL_32, blue:REAL_32) <- `glColor3f(@red,@green,@blue)`;
  - gl_color3fv (v:POINTER) <- `glColor3fv(@v)`;
  - gl_color3i (red:INTEGER, green:INTEGER, blue:INTEGER) <- `glColor3i(@red,@green,@blue)`;
  - gl_color3iv (v:POINTER) <- `glColor3iv(@v)`;
  - gl_color3s (red:INTEGER_16, green:INTEGER_16, blue:INTEGER_16) <- `glColor3s(@red,@green,@blue)`;
  - gl_color3sv (v:POINTER) <- `glColor3sv(@v)`;
  - gl_color3ub (red:UINTEGER_8, green:UINTEGER_8, blue:UINTEGER_8) <- `glColor3ub(@red,@green,@blue)`;
  - gl_color3ubv (v:POINTER) <- `glColor3ubv(@v)`;
  - gl_color3ui (red:UINTEGER_32, green:UINTEGER_32, blue:UINTEGER_32) <- `glColor3ui(@red,@green,@blue)`;
  - gl_color3uiv (v:POINTER) <- `glColor3uiv(@v)`;
  - gl_color3us (red:UINTEGER_16, green:UINTEGER_16, blue:UINTEGER_16) <- `glColor3us(@red,@green,@blue)`;
  - gl_color3usv (v:POINTER) <- `glColor3usv(@v)`;
  - gl_color4b (red:INTEGER_8, green:INTEGER_8, blue:INTEGER_8, alpha:INTEGER_8) <- `glColor4b(@red,@green,@blue,@alpha)`;
  - gl_color4bv (v:POINTER) <- `glColor4bv(@v)`;
  - gl_color4d (red:REAL_32, green:REAL_32, blue:REAL_32, alpha:REAL_32) <- `glColor4d(@red,@green,@blue,@alpha)`;
  - gl_color4dv (v:POINTER) <- `glColor4dv(@v)`;
  - gl_color4f (red:REAL_32, green:REAL_32, blue:REAL_32, alpha:REAL_32) <- `glColor4f(@red,@green,@blue,@alpha)`;
  - gl_color4fv (v:POINTER) <- `glColor4fv(@v)`;
  - gl_color4i (red:INTEGER, green:INTEGER, blue:INTEGER, alpha:INTEGER) <- `glColor4i(@red,@green,@blue,@alpha)`;
  - gl_color4iv (v:POINTER) <- `glColor4iv(@v)`;
  - gl_color4s (red:INTEGER_16, green:INTEGER_16, blue:INTEGER_16, alpha:INTEGER_16) <- `glColor4s(@red,@green,@blue,@alpha)`;
  - gl_color4sv (v:POINTER) <- `glColor4sv(@v)`;
  - gl_color4ub (red:UINTEGER_8, green:UINTEGER_8, blue:UINTEGER_8, alpha:UINTEGER_8) <- `glColor4ub(@red,@green,@blue,@alpha)`;
  - gl_color4ubv (v:POINTER) <- `glColor4ubv(@v)`;
  - gl_color4ui (red:UINTEGER_32, green:UINTEGER_32, blue:UINTEGER_32, alpha:UINTEGER_32) <- `glColor4ui(@red,@green,@blue,@alpha)`;
  - gl_color4uiv (v:POINTER) <- `glColor4uiv(@v)`;
  - gl_color4us (red:UINTEGER_16, green:UINTEGER_16, blue:UINTEGER_16, alpha:UINTEGER_16) <- `glColor4us(@red,@green,@blue,@alpha)`;
  - gl_color4usv (v:POINTER) <- `glColor4usv(@v)`;
  - gl_color_mask (red:UINTEGER_8, green:UINTEGER_8, blue:UINTEGER_8, alpha:UINTEGER_8) <- `glColorMask(@red,@green,@blue,@alpha)`;
  - gl_color_material (face:UINTEGER_32, mode:UINTEGER_32) <- `glColorMaterial(@face,@mode)`;
  - gl_color_pointer (size:INTEGER, type:UINTEGER_32, stride:INTEGER, pointer:POINTER) <- `glColorPointer(@size,@type,@stride,@pointer)`;
  - gl_copy_pixels (x:INTEGER, y:INTEGER, width:INTEGER, height:INTEGER, type:UINTEGER_32) <- `glCopyPixels(@x,@y,@width,@height,@type)`;
  - gl_copy_tex_image1_d (target:UINTEGER_32, level:INTEGER, internal_format:UINTEGER_32, x:INTEGER, y:INTEGER, width:INTEGER, border:INTEGER)
 <- `glCopyTexImage1D(@target,@level,@internal_format,@x,@y,@width,@border)`;
  - gl_copy_tex_image2_d (target:UINTEGER_32, level:INTEGER, internal_format:UINTEGER_32, x:INTEGER, y:INTEGER, width:INTEGER, height:INTEGER, border:INTEGER)
 <- `glCopyTexImage2D(@target,@level,@internal_format,@x,@y,@width,@height,@border)`;
  - gl_copy_tex_sub_image1_d (target:UINTEGER_32, level:INTEGER, xoffset:INTEGER, x:INTEGER, y:INTEGER, width:INTEGER) <- `glCopyTexSubImage1D(@target,@level,@xoffset,@x,@y,@width)`;
  - gl_copy_tex_sub_image2_d (target:UINTEGER_32, level:INTEGER, xoffset:INTEGER, yoffset:INTEGER, x:INTEGER, y:INTEGER, width:INTEGER, height:INTEGER)
 <- `glCopyTexSubImage2D(@target,@level,@xoffset,@yoffset,@x,@y,@width,@height)`;
  - gl_cull_face (mode:UINTEGER_32) <- `glCullFace(@mode)`;
  - gl_delete_lists (list:UINTEGER_32, range:INTEGER) <- `glDeleteLists(@list,@range)`;
  - gl_delete_textures (n:INTEGER, textures:POINTER) <- `glDeleteTextures(@n,@textures)`;
  - gl_depth_func (func:UINTEGER_32) <- `glDepthFunc(@func)`;
  - gl_depth_mask (flag:UINTEGER_8) <- `glDepthMask(@flag)`;
  - gl_depth_range (z_near:REAL_32, z_far:REAL_32) <- `glDepthRange(@z_near,@z_far)`;
  - gl_disable (cap:UINTEGER_32) <- `glDisable(@cap)`;
  - gl_disable_client_state (array:UINTEGER_32) <- `glDisableClientState(@array)`;
  - gl_draw_arrays (mode:UINTEGER_32, first:INTEGER, count:INTEGER) <- `glDrawArrays(@mode,@first,@count)`;
  - gl_draw_buffer (mode:UINTEGER_32) <- `glDrawBuffer(@mode)`;
  - gl_draw_elements (mode:UINTEGER_32, count:INTEGER, type:UINTEGER_32, indices:POINTER) <- `glDrawElements(@mode,@count,@type,@indices)`;
  - gl_draw_pixels (width:INTEGER, height:INTEGER, format:UINTEGER_32, type:UINTEGER_32, pixels:POINTER) <- `glDrawPixels(@width,@height,@format,@type,@pixels)`;
  - gl_edge_flag (flag:UINTEGER_8) <- `glEdgeFlag(@flag)`;
  - gl_edge_flag_pointer (stride:INTEGER, pointer:POINTER) <- `glEdgeFlagPointer(@stride,@pointer)`;
  - gl_edge_flagv (flag:POINTER) <- `glEdgeFlagv(@flag)`;
  - gl_enable (cap:UINTEGER_32) <- `glEnable(@cap)`;
  - gl_enable_client_state (array:UINTEGER_32) <- `glEnableClientState(@array)`;
  - gl_end <- `glEnd()`;
  - gl_end_list <- `glEndList()`;
  - gl_eval_coord1d (u:REAL_32) <- `glEvalCoord1d(@u)`;
  - gl_eval_coord1dv (u:POINTER) <- `glEvalCoord1dv(@u)`;
  - gl_eval_coord1f (u:REAL_32) <- `glEvalCoord1f(@u)`;
  - gl_eval_coord1fv (u:POINTER) <- `glEvalCoord1fv(@u)`;
  - gl_eval_coord2d (u:REAL_32, v:REAL_32) <- `glEvalCoord2d(@u,@v)`;
  - gl_eval_coord2dv (u:POINTER) <- `glEvalCoord2dv(@u)`;
  - gl_eval_coord2f (u:REAL_32, v:REAL_32) <- `glEvalCoord2f(@u,@v)`;
  - gl_eval_coord2fv (u:POINTER) <- `glEvalCoord2fv(@u)`;
  - gl_eval_mesh1 (mode:UINTEGER_32, i1:INTEGER, i2:INTEGER) <- `glEvalMesh1(@mode,@i1,@i2)`;
  - gl_eval_mesh2 (mode:UINTEGER_32, i1:INTEGER, i2:INTEGER, j1:INTEGER, j2:INTEGER) <- `glEvalMesh2(@mode,@i1,@i2,@j1,@j2)`;
  - gl_eval_point1 (i:INTEGER) <- `glEvalPoint1(@i)`;
  - gl_eval_point2 (i:INTEGER, j:INTEGER) <- `glEvalPoint2(@i,@j)`;
  - gl_feedback_buffer (size:INTEGER, type:UINTEGER_32, buffer:POINTER) <- `glFeedbackBuffer(@size,@type,@buffer)`;
  - gl_finish <- `glFinish()`;
  - gl_flush <- `glFlush()`;
  - gl_fogf (pname:UINTEGER_32, param:REAL_32) <- `glFogf(@pname,@param)`;
  - gl_fogfv (pname:UINTEGER_32, params:POINTER) <- `glFogfv(@pname,@params)`;
  - gl_fogi (pname:UINTEGER_32, param:INTEGER) <- `glFogi(@pname,@param)`;
  - gl_fogiv (pname:UINTEGER_32, params:POINTER) <- `glFogiv(@pname,@params)`;
  - gl_front_face (mode:UINTEGER_32) <- `glFrontFace(@mode)`;
  - gl_frustum (left:REAL_32, right:REAL_32, bottom:REAL_32, top:REAL_32, z_near:REAL_32, z_far:REAL_32) <- `glFrustum(@left,@right,@bottom,@top,@z_near,@z_far)`;
  - gl_gen_lists (range:INTEGER) :UINTEGER_32 <- `glGenLists(@range)`:UINTEGER_32;
  - gl_gen_textures (n:INTEGER, textures:POINTER) <- `glGenTextures(@n,@textures)`;
  - gl_get_booleanv (pname:UINTEGER_32, params:POINTER) <- `glGetBooleanv(@pname,@params)`;
  - gl_get_clip_plane (plane:UINTEGER_32, equation:POINTER) <- `glGetClipPlane(@plane,@equation)`;
  - gl_get_doublev (pname:UINTEGER_32, params:POINTER) <- `glGetDoublev(@pname,@params)`;
  - gl_get_error :UINTEGER_32 <- `glGetError()`:UINTEGER_32;
  - gl_get_floatv (pname:UINTEGER_32, params:POINTER) <- `glGetFloatv(@pname,@params)`;
  - gl_get_integerv (pname:UINTEGER_32, params:POINTER) <- `glGetIntegerv(@pname,@params)`;
  - gl_get_lightfv (light:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetLightfv(@light,@pname,@params)`;
  - gl_get_lightiv (light:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetLightiv(@light,@pname,@params)`;
  - gl_get_mapdv (target:UINTEGER_32, query:UINTEGER_32, v:POINTER) <- `glGetMapdv(@target,@query,@v)`;
  - gl_get_mapfv (target:UINTEGER_32, query:UINTEGER_32, v:POINTER) <- `glGetMapfv(@target,@query,@v)`;
  - gl_get_mapiv (target:UINTEGER_32, query:UINTEGER_32, v:POINTER) <- `glGetMapiv(@target,@query,@v)`;
  - gl_get_materialfv (face:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetMaterialfv(@face,@pname,@params)`;
  - gl_get_materialiv (face:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetMaterialiv(@face,@pname,@params)`;
  - gl_get_pixel_mapfv (map:UINTEGER_32, values:POINTER) <- `glGetPixelMapfv(@map,@values)`;
  - gl_get_pixel_mapuiv (map:UINTEGER_32, values:POINTER) <- `glGetPixelMapuiv(@map,@values)`;
  - gl_get_pixel_mapusv (map:UINTEGER_32, values:POINTER) <- `glGetPixelMapusv(@map,@values)`;
  - gl_get_pointerv (pname:UINTEGER_32, params:POINTER) <- `glGetPointerv(@pname,@params)`;
  - gl_get_polygon_stipple (mask:POINTER) <- `glGetPolygonStipple(@mask)`;
  - gl_get_string (name:UINTEGER_32) :POINTER <- `glGetString(@name)`:POINTER;
  - gl_get_tex_envfv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetTexEnvfv(@target,@pname,@params)`;
  - gl_get_tex_enviv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetTexEnviv(@target,@pname,@params)`;
  - gl_get_tex_gendv (coord:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetTexGendv(@coord,@pname,@params)`;
  - gl_get_tex_genfv (coord:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetTexGenfv(@coord,@pname,@params)`;
  - gl_get_tex_geniv (coord:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetTexGeniv(@coord,@pname,@params)`;
  - gl_get_tex_image (target:UINTEGER_32, level:INTEGER, format:UINTEGER_32, type:UINTEGER_32, pixels:POINTER) <- `glGetTexImage(@target,@level,@format,@type,@pixels)`;
  - gl_get_tex_level_parameterfv (target:UINTEGER_32, level:INTEGER, pname:UINTEGER_32, params:POINTER) <- `glGetTexLevelParameterfv(@target,@level,@pname,@params)`;
  - gl_get_tex_level_parameteriv (target:UINTEGER_32, level:INTEGER, pname:UINTEGER_32, params:POINTER) <- `glGetTexLevelParameteriv(@target,@level,@pname,@params)`;
  - gl_get_tex_parameterfv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetTexParameterfv(@target,@pname,@params)`;
  - gl_get_tex_parameteriv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glGetTexParameteriv(@target,@pname,@params)`;
  - gl_hint (target:UINTEGER_32, mode:UINTEGER_32) <- `glHint(@target,@mode)`;
  - gl_index_mask (mask:UINTEGER_32) <- `glIndexMask(@mask)`;
  - gl_index_pointer (type:UINTEGER_32, stride:INTEGER, pointer:POINTER) <- `glIndexPointer(@type,@stride,@pointer)`;
  - gl_indexd (c:REAL_32) <- `glIndexd(@c)`;
  - gl_indexdv (c:POINTER) <- `glIndexdv(@c)`;
  - gl_indexf (c:REAL_32) <- `glIndexf(@c)`;
  - gl_indexfv (c:POINTER) <- `glIndexfv(@c)`;
  - gl_indexi (c:INTEGER) <- `glIndexi(@c)`;
  - gl_indexiv (c:POINTER) <- `glIndexiv(@c)`;
  - gl_indexs (c:INTEGER_16) <- `glIndexs(@c)`;
  - gl_indexsv (c:POINTER) <- `glIndexsv(@c)`;
  - gl_indexub (c:UINTEGER_8) <- `glIndexub(@c)`;
  - gl_indexubv (c:POINTER) <- `glIndexubv(@c)`;
  - gl_init_names <- `glInitNames()`;
  - gl_interleaved_arrays (format:UINTEGER_32, stride:INTEGER, pointer:POINTER) <- `glInterleavedArrays(@format,@stride,@pointer)`;
  - gl_is_enabled (cap:UINTEGER_32) :UINTEGER_8 <- `glIsEnabled(@cap)`:UINTEGER_8;
  - gl_is_list (list:UINTEGER_32) :UINTEGER_8 <- `glIsList(@list)`:UINTEGER_8;
  - gl_is_texture (texture:UINTEGER_32) :UINTEGER_8 <- `glIsTexture(@texture)`:UINTEGER_8;
  - gl_light_modelf (pname:UINTEGER_32, param:REAL_32) <- `glLightModelf(@pname,@param)`;
  - gl_light_modelfv (pname:UINTEGER_32, params:POINTER) <- `glLightModelfv(@pname,@params)`;
  - gl_light_modeli (pname:UINTEGER_32, param:INTEGER) <- `glLightModeli(@pname,@param)`;
  - gl_light_modeliv (pname:UINTEGER_32, params:POINTER) <- `glLightModeliv(@pname,@params)`;
  - gl_lightf (light:UINTEGER_32, pname:UINTEGER_32, param:REAL_32) <- `glLightf(@light,@pname,@param)`;
  - gl_lightfv (light:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glLightfv(@light,@pname,@params)`;
  - gl_lighti (light:UINTEGER_32, pname:UINTEGER_32, param:INTEGER) <- `glLighti(@light,@pname,@param)`;
  - gl_lightiv (light:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glLightiv(@light,@pname,@params)`;
  - gl_line_stipple (factor:INTEGER, pattern:UINTEGER_16) <- `glLineStipple(@factor,@pattern)`;
  - gl_line_width (width:REAL_32) <- `glLineWidth(@width)`;
  - gl_list_base (base:UINTEGER_32) <- `glListBase(@base)`;
  - gl_load_identity <- `glLoadIdentity()`;
  - gl_load_matrixd (m:POINTER) <- `glLoadMatrixd(@m)`;
  - gl_load_matrixf (m:POINTER) <- `glLoadMatrixf(@m)`;
  - gl_load_name (name:UINTEGER_32) <- `glLoadName(@name)`;
  - gl_logic_op (opcode:UINTEGER_32) <- `glLogicOp(@opcode)`;
  - gl_map1d (target:UINTEGER_32, u1:REAL_32, u2:REAL_32, stride:INTEGER, order:INTEGER, points:POINTER) <- `glMap1d(@target,@u1,@u2,@stride,@order,@points)`;
  - gl_map1f (target:UINTEGER_32, u1:REAL_32, u2:REAL_32, stride:INTEGER, order:INTEGER, points:POINTER) <- `glMap1f(@target,@u1,@u2,@stride,@order,@points)`;
  - gl_map2d (target:UINTEGER_32, u1:REAL_32, u2:REAL_32, ustride:INTEGER, uorder:INTEGER, v1:REAL_32, v2:REAL_32, vstride:INTEGER, vorder:INTEGER, points:POINTER)
 <- `glMap2d(@target,@u1,@u2,@ustride,@uorder,@v1,@v2,@vstride,@vorder,@points)`;
  - gl_map2f (target:UINTEGER_32, u1:REAL_32, u2:REAL_32, ustride:INTEGER, uorder:INTEGER, v1:REAL_32, v2:REAL_32, vstride:INTEGER, vorder:INTEGER, points:POINTER)
 <- `glMap2f(@target,@u1,@u2,@ustride,@uorder,@v1,@v2,@vstride,@vorder,@points)`;
  - gl_map_grid1d (un:INTEGER, u1:REAL_32, u2:REAL_32) <- `glMapGrid1d(@un,@u1,@u2)`;
  - gl_map_grid1f (un:INTEGER, u1:REAL_32, u2:REAL_32) <- `glMapGrid1f(@un,@u1,@u2)`;
  - gl_map_grid2d (un:INTEGER, u1:REAL_32, u2:REAL_32, vn:INTEGER, v1:REAL_32, v2:REAL_32) <- `glMapGrid2d(@un,@u1,@u2,@vn,@v1,@v2)`;
  - gl_map_grid2f (un:INTEGER, u1:REAL_32, u2:REAL_32, vn:INTEGER, v1:REAL_32, v2:REAL_32) <- `glMapGrid2f(@un,@u1,@u2,@vn,@v1,@v2)`;
  - gl_materialf (face:UINTEGER_32, pname:UINTEGER_32, param:REAL_32) <- `glMaterialf(@face,@pname,@param)`;
  - gl_materialfv (face:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glMaterialfv(@face,@pname,@params)`;
  - gl_materiali (face:UINTEGER_32, pname:UINTEGER_32, param:INTEGER) <- `glMateriali(@face,@pname,@param)`;
  - gl_materialiv (face:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glMaterialiv(@face,@pname,@params)`;
  - gl_matrix_mode (mode:UINTEGER_32) <- `glMatrixMode(@mode)`;
  - gl_mult_matrixd (m:POINTER) <- `glMultMatrixd(@m)`;
  - gl_mult_matrixf (m:POINTER) <- `glMultMatrixf(@m)`;
  - gl_new_list (list:UINTEGER_32, mode:UINTEGER_32) <- `glNewList(@list,@mode)`;
  - gl_normal3b (nx:INTEGER_8, ny:INTEGER_8, nz:INTEGER_8) <- `glNormal3b(@nx,@ny,@nz)`;
  - gl_normal3bv (v:POINTER) <- `glNormal3bv(@v)`;
  - gl_normal3d (nx:REAL_32, ny:REAL_32, nz:REAL_32) <- `glNormal3d(@nx,@ny,@nz)`;
  - gl_normal3dv (v:POINTER) <- `glNormal3dv(@v)`;
  - gl_normal3f (nx:REAL_32, ny:REAL_32, nz:REAL_32) <- `glNormal3f(@nx,@ny,@nz)`;
  - gl_normal3fv (v:POINTER) <- `glNormal3fv(@v)`;
  - gl_normal3i (nx:INTEGER, ny:INTEGER, nz:INTEGER) <- `glNormal3i(@nx,@ny,@nz)`;
  - gl_normal3iv (v:POINTER) <- `glNormal3iv(@v)`;
  - gl_normal3s (nx:INTEGER_16, ny:INTEGER_16, nz:INTEGER_16) <- `glNormal3s(@nx,@ny,@nz)`;
  - gl_normal3sv (v:POINTER) <- `glNormal3sv(@v)`;
  - gl_normal_pointer (type:UINTEGER_32, stride:INTEGER, pointer:POINTER) <- `glNormalPointer(@type,@stride,@pointer)`;
  - gl_ortho (left:REAL_32, right:REAL_32, bottom:REAL_32, top:REAL_32, z_near:REAL_32, z_far:REAL_32) <- `glOrtho(@left,@right,@bottom,@top,@z_near,@z_far)`;
  - gl_pass_through (token:REAL_32) <- `glPassThrough(@token)`;
  - gl_pixel_mapfv (map:UINTEGER_32, mapsize:INTEGER, values:POINTER) <- `glPixelMapfv(@map,@mapsize,@values)`;
  - gl_pixel_mapuiv (map:UINTEGER_32, mapsize:INTEGER, values:POINTER) <- `glPixelMapuiv(@map,@mapsize,@values)`;
  - gl_pixel_mapusv (map:UINTEGER_32, mapsize:INTEGER, values:POINTER) <- `glPixelMapusv(@map,@mapsize,@values)`;
  - gl_pixel_storef (pname:UINTEGER_32, param:REAL_32) <- `glPixelStoref(@pname,@param)`;
  - gl_pixel_storei (pname:UINTEGER_32, param:INTEGER) <- `glPixelStorei(@pname,@param)`;
  - gl_pixel_transferf (pname:UINTEGER_32, param:REAL_32) <- `glPixelTransferf(@pname,@param)`;
  - gl_pixel_transferi (pname:UINTEGER_32, param:INTEGER) <- `glPixelTransferi(@pname,@param)`;
  - gl_pixel_zoom (xfactor:REAL_32, yfactor:REAL_32) <- `glPixelZoom(@xfactor,@yfactor)`;
  - gl_point_size (size:REAL_32) <- `glPointSize(@size)`;
  - gl_polygon_mode (face:UINTEGER_32, mode:UINTEGER_32) <- `glPolygonMode(@face,@mode)`;
  - gl_polygon_offset (factor:REAL_32, units:REAL_32) <- `glPolygonOffset(@factor,@units)`;
  - gl_polygon_stipple (mask:POINTER) <- `glPolygonStipple(@mask)`;
  - gl_pop_attrib <- `glPopAttrib()`;
  - gl_pop_client_attrib <- `glPopClientAttrib()`;
  - gl_pop_matrix <- `glPopMatrix()`;
  - gl_pop_name <- `glPopName()`;
  - gl_prioritize_textures (n:INTEGER, textures:POINTER, priorities:POINTER) <- `glPrioritizeTextures(@n,@textures,@priorities)`;
  - gl_push_attrib (mask:UINTEGER_32) <- `glPushAttrib(@mask)`;
  - gl_push_client_attrib (mask:UINTEGER_32) <- `glPushClientAttrib(@mask)`;
  - gl_push_matrix <- `glPushMatrix()`;
  - gl_push_name (name:UINTEGER_32) <- `glPushName(@name)`;
  - gl_raster_pos2d (x:REAL_32, y:REAL_32) <- `glRasterPos2d(@x,@y)`;
  - gl_raster_pos2dv (v:POINTER) <- `glRasterPos2dv(@v)`;
  - gl_raster_pos2f (x:REAL_32, y:REAL_32) <- `glRasterPos2f(@x,@y)`;
  - gl_raster_pos2fv (v:POINTER) <- `glRasterPos2fv(@v)`;
  - gl_raster_pos2i (x:INTEGER, y:INTEGER) <- `glRasterPos2i(@x,@y)`;
  - gl_raster_pos2iv (v:POINTER) <- `glRasterPos2iv(@v)`;
  - gl_raster_pos2s (x:INTEGER_16, y:INTEGER_16) <- `glRasterPos2s(@x,@y)`;
  - gl_raster_pos2sv (v:POINTER) <- `glRasterPos2sv(@v)`;
  - gl_raster_pos3d (x:REAL_32, y:REAL_32, z:REAL_32) <- `glRasterPos3d(@x,@y,@z)`;
  - gl_raster_pos3dv (v:POINTER) <- `glRasterPos3dv(@v)`;
  - gl_raster_pos3f (x:REAL_32, y:REAL_32, z:REAL_32) <- `glRasterPos3f(@x,@y,@z)`;
  - gl_raster_pos3fv (v:POINTER) <- `glRasterPos3fv(@v)`;
  - gl_raster_pos3i (x:INTEGER, y:INTEGER, z:INTEGER) <- `glRasterPos3i(@x,@y,@z)`;
  - gl_raster_pos3iv (v:POINTER) <- `glRasterPos3iv(@v)`;
  - gl_raster_pos3s (x:INTEGER_16, y:INTEGER_16, z:INTEGER_16) <- `glRasterPos3s(@x,@y,@z)`;
  - gl_raster_pos3sv (v:POINTER) <- `glRasterPos3sv(@v)`;
  - gl_raster_pos4d (x:REAL_32, y:REAL_32, z:REAL_32, w:REAL_32) <- `glRasterPos4d(@x,@y,@z,@w)`;
  - gl_raster_pos4dv (v:POINTER) <- `glRasterPos4dv(@v)`;
  - gl_raster_pos4f (x:REAL_32, y:REAL_32, z:REAL_32, w:REAL_32) <- `glRasterPos4f(@x,@y,@z,@w)`;
  - gl_raster_pos4fv (v:POINTER) <- `glRasterPos4fv(@v)`;
  - gl_raster_pos4i (x:INTEGER, y:INTEGER, z:INTEGER, w:INTEGER) <- `glRasterPos4i(@x,@y,@z,@w)`;
  - gl_raster_pos4iv (v:POINTER) <- `glRasterPos4iv(@v)`;
  - gl_raster_pos4s (x:INTEGER_16, y:INTEGER_16, z:INTEGER_16, w:INTEGER_16) <- `glRasterPos4s(@x,@y,@z,@w)`;
  - gl_raster_pos4sv (v:POINTER) <- `glRasterPos4sv(@v)`;
  - gl_read_buffer (mode:UINTEGER_32) <- `glReadBuffer(@mode)`;
  - gl_read_pixels (x:INTEGER, y:INTEGER, width:INTEGER, height:INTEGER, format:UINTEGER_32, type:UINTEGER_32, pixels:POINTER)
 <- `glReadPixels(@x,@y,@width,@height,@format,@type,@pixels)`;
  - gl_rectd (x1:REAL_32, y1:REAL_32, x2:REAL_32, y2:REAL_32) <- `glRectd(@x1,@y1,@x2,@y2)`;
  - gl_rectdv (v1:POINTER, v2:POINTER) <- `glRectdv(@v1,@v2)`;
  - gl_rectf (x1:REAL_32, y1:REAL_32, x2:REAL_32, y2:REAL_32) <- `glRectf(@x1,@y1,@x2,@y2)`;
  - gl_rectfv (v1:POINTER, v2:POINTER) <- `glRectfv(@v1,@v2)`;
  - gl_recti (x1:INTEGER, y1:INTEGER, x2:INTEGER, y2:INTEGER) <- `glRecti(@x1,@y1,@x2,@y2)`;
  - gl_rectiv (v1:POINTER, v2:POINTER) <- `glRectiv(@v1,@v2)`;
  - gl_rects (x1:INTEGER_16, y1:INTEGER_16, x2:INTEGER_16, y2:INTEGER_16) <- `glRects(@x1,@y1,@x2,@y2)`;
  - gl_rectsv (v1:POINTER, v2:POINTER) <- `glRectsv(@v1,@v2)`;
  - gl_render_mode (mode:UINTEGER_32) :INTEGER <- `glRenderMode(@mode)`:INTEGER;
  - gl_rotated (angle:REAL_32, x:REAL_32, y:REAL_32, z:REAL_32) <- `glRotated(@angle,@x,@y,@z)`;
  - gl_rotatef (angle:REAL_32, x:REAL_32, y:REAL_32, z:REAL_32) <- `glRotatef(@angle,@x,@y,@z)`;
  - gl_scaled (x:REAL_32, y:REAL_32, z:REAL_32) <- `glScaled(@x,@y,@z)`;
  - gl_scalef (x:REAL_32, y:REAL_32, z:REAL_32) <- `glScalef(@x,@y,@z)`;
  - gl_scissor (x:INTEGER, y:INTEGER, width:INTEGER, height:INTEGER) <- `glScissor(@x,@y,@width,@height)`;
  - gl_select_buffer (size:INTEGER, buffer:POINTER) <- `glSelectBuffer(@size,@buffer)`;
  - gl_shade_model (mode:UINTEGER_32) <- `glShadeModel(@mode)`;
  - gl_stencil_func (func:UINTEGER_32, ref:INTEGER, mask:UINTEGER_32) <- `glStencilFunc(@func,@ref,@mask)`;
  - gl_stencil_mask (mask:UINTEGER_32) <- `glStencilMask(@mask)`;
  - gl_stencil_op (fail:UINTEGER_32, zfail:UINTEGER_32, zpass:UINTEGER_32) <- `glStencilOp(@fail,@zfail,@zpass)`;
  - gl_tex_coord1d (s:REAL_32) <- `glTexCoord1d(@s)`;
  - gl_tex_coord1dv (v:POINTER) <- `glTexCoord1dv(@v)`;
  - gl_tex_coord1f (s:REAL_32) <- `glTexCoord1f(@s)`;
  - gl_tex_coord1fv (v:POINTER) <- `glTexCoord1fv(@v)`;
  - gl_tex_coord1i (s:INTEGER) <- `glTexCoord1i(@s)`;
  - gl_tex_coord1iv (v:POINTER) <- `glTexCoord1iv(@v)`;
  - gl_tex_coord1s (s:INTEGER_16) <- `glTexCoord1s(@s)`;
  - gl_tex_coord1sv (v:POINTER) <- `glTexCoord1sv(@v)`;
  - gl_tex_coord2d (s:REAL_32, t:REAL_32) <- `glTexCoord2d(@s,@t)`;
  - gl_tex_coord2dv (v:POINTER) <- `glTexCoord2dv(@v)`;
  - gl_tex_coord2f (s:REAL_32, t:REAL_32) <- `glTexCoord2f(@s,@t)`;
  - gl_tex_coord2fv (v:POINTER) <- `glTexCoord2fv(@v)`;
  - gl_tex_coord2i (s:INTEGER, t:INTEGER) <- `glTexCoord2i(@s,@t)`;
  - gl_tex_coord2iv (v:POINTER) <- `glTexCoord2iv(@v)`;
  - gl_tex_coord2s (s:INTEGER_16, t:INTEGER_16) <- `glTexCoord2s(@s,@t)`;
  - gl_tex_coord2sv (v:POINTER) <- `glTexCoord2sv(@v)`;
  - gl_tex_coord3d (s:REAL_32, t:REAL_32, r:REAL_32) <- `glTexCoord3d(@s,@t,@r)`;
  - gl_tex_coord3dv (v:POINTER) <- `glTexCoord3dv(@v)`;
  - gl_tex_coord3f (s:REAL_32, t:REAL_32, r:REAL_32) <- `glTexCoord3f(@s,@t,@r)`;
  - gl_tex_coord3fv (v:POINTER) <- `glTexCoord3fv(@v)`;
  - gl_tex_coord3i (s:INTEGER, t:INTEGER, r:INTEGER) <- `glTexCoord3i(@s,@t,@r)`;
  - gl_tex_coord3iv (v:POINTER) <- `glTexCoord3iv(@v)`;
  - gl_tex_coord3s (s:INTEGER_16, t:INTEGER_16, r:INTEGER_16) <- `glTexCoord3s(@s,@t,@r)`;
  - gl_tex_coord3sv (v:POINTER) <- `glTexCoord3sv(@v)`;
  - gl_tex_coord4d (s:REAL_32, t:REAL_32, r:REAL_32, q:REAL_32) <- `glTexCoord4d(@s,@t,@r,@q)`;
  - gl_tex_coord4dv (v:POINTER) <- `glTexCoord4dv(@v)`;
  - gl_tex_coord4f (s:REAL_32, t:REAL_32, r:REAL_32, q:REAL_32) <- `glTexCoord4f(@s,@t,@r,@q)`;
  - gl_tex_coord4fv (v:POINTER) <- `glTexCoord4fv(@v)`;
  - gl_tex_coord4i (s:INTEGER, t:INTEGER, r:INTEGER, q:INTEGER) <- `glTexCoord4i(@s,@t,@r,@q)`;
  - gl_tex_coord4iv (v:POINTER) <- `glTexCoord4iv(@v)`;
  - gl_tex_coord4s (s:INTEGER_16, t:INTEGER_16, r:INTEGER_16, q:INTEGER_16) <- `glTexCoord4s(@s,@t,@r,@q)`;
  - gl_tex_coord4sv (v:POINTER) <- `glTexCoord4sv(@v)`;
  - gl_tex_coord_pointer (size:INTEGER, type:UINTEGER_32, stride:INTEGER, pointer:POINTER) <- `glTexCoordPointer(@size,@type,@stride,@pointer)`;
  - gl_tex_envf (target:UINTEGER_32, pname:UINTEGER_32, param:REAL_32) <- `glTexEnvf(@target,@pname,@param)`;
  - gl_tex_envfv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glTexEnvfv(@target,@pname,@params)`;
  - gl_tex_envi (target:UINTEGER_32, pname:UINTEGER_32, param:INTEGER) <- `glTexEnvi(@target,@pname,@param)`;
  - gl_tex_enviv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glTexEnviv(@target,@pname,@params)`;
  - gl_tex_gend (coord:UINTEGER_32, pname:UINTEGER_32, param:REAL_32) <- `glTexGend(@coord,@pname,@param)`;
  - gl_tex_gendv (coord:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glTexGendv(@coord,@pname,@params)`;
  - gl_tex_genf (coord:UINTEGER_32, pname:UINTEGER_32, param:REAL_32) <- `glTexGenf(@coord,@pname,@param)`;
  - gl_tex_genfv (coord:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glTexGenfv(@coord,@pname,@params)`;
  - gl_tex_geni (coord:UINTEGER_32, pname:UINTEGER_32, param:INTEGER) <- `glTexGeni(@coord,@pname,@param)`;
  - gl_tex_geniv (coord:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glTexGeniv(@coord,@pname,@params)`;
  - gl_tex_image1_d (target:UINTEGER_32, level:INTEGER, internalformat:INTEGER, width:INTEGER, border:INTEGER, format:UINTEGER_32, type:UINTEGER_32, pixels:POINTER)
 <- `glTexImage1D(@target,@level,@internalformat,@width,@border,@format,@type,@pixels)`;
  - gl_tex_image2_d (target:UINTEGER_32, level:INTEGER, internalformat:INTEGER, width:INTEGER, height:INTEGER, border:INTEGER, format:UINTEGER_32, type:UINTEGER_32, pixels:POINTER)
 <- `glTexImage2D(@target,@level,@internalformat,@width,@height,@border,@format,@type,@pixels)`;
  - gl_tex_parameterf (target:UINTEGER_32, pname:UINTEGER_32, param:REAL_32) <- `glTexParameterf(@target,@pname,@param)`;
  - gl_tex_parameterfv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glTexParameterfv(@target,@pname,@params)`;
  - gl_tex_parameteri (target:UINTEGER_32, pname:UINTEGER_32, param:INTEGER) <- `glTexParameteri(@target,@pname,@param)`;
  - gl_tex_parameteriv (target:UINTEGER_32, pname:UINTEGER_32, params:POINTER) <- `glTexParameteriv(@target,@pname,@params)`;
  - gl_tex_sub_image1_d (target:UINTEGER_32, level:INTEGER, xoffset:INTEGER, width:INTEGER, format:UINTEGER_32, type:UINTEGER_32, pixels:POINTER)
 <- `glTexSubImage1D(@target,@level,@xoffset,@width,@format,@type,@pixels)`;
  - gl_tex_sub_image2_d (target:UINTEGER_32, level:INTEGER, xoffset:INTEGER, yoffset:INTEGER, width:INTEGER, height:INTEGER, format:UINTEGER_32, type:UINTEGER_32, pixels:POINTER)
 <- `glTexSubImage2D(@target,@level,@xoffset,@yoffset,@width,@height,@format,@type,@pixels)`;
  - gl_translated (x:REAL_32, y:REAL_32, z:REAL_32) <- `glTranslated(@x,@y,@z)`;
  - gl_translatef (x:REAL_32, y:REAL_32, z:REAL_32) <- `glTranslatef(@x,@y,@z)`;
  - gl_vertex2d (x:REAL_32, y:REAL_32) <- `glVertex2d(@x,@y)`;
  - gl_vertex2dv (v:POINTER) <- `glVertex2dv(@v)`;
  - gl_vertex2f (x:REAL_32, y:REAL_32) <- `glVertex2f(@x,@y)`;
  - gl_vertex2fv (v:POINTER) <- `glVertex2fv(@v)`;
  - gl_vertex2i (x:INTEGER, y:INTEGER) <- `glVertex2i(@x,@y)`;
  - gl_vertex2iv (v:POINTER) <- `glVertex2iv(@v)`;
  - gl_vertex2s (x:INTEGER_16, y:INTEGER_16) <- `glVertex2s(@x,@y)`;
  - gl_vertex2sv (v:POINTER) <- `glVertex2sv(@v)`;
  - gl_vertex3d (x:REAL_32, y:REAL_32, z:REAL_32) <- `glVertex3d(@x,@y,@z)`;
  - gl_vertex3dv (v:POINTER) <- `glVertex3dv(@v)`;
  - gl_vertex3f (x:REAL_32, y:REAL_32, z:REAL_32) <- `glVertex3f(@x,@y,@z)`;
  - gl_vertex3fv (v:POINTER) <- `glVertex3fv(@v)`;
  - gl_vertex3i (x:INTEGER, y:INTEGER, z:INTEGER) <- `glVertex3i(@x,@y,@z)`;
  - gl_vertex3iv (v:POINTER) <- `glVertex3iv(@v)`;
  - gl_vertex3s (x:INTEGER_16, y:INTEGER_16, z:INTEGER_16) <- `glVertex3s(@x,@y,@z)`;
  - gl_vertex3sv (v:POINTER) <- `glVertex3sv(@v)`;
  - gl_vertex4d (x:REAL_32, y:REAL_32, z:REAL_32, w:REAL_32) <- `glVertex4d(@x,@y,@z,@w)`;
  - gl_vertex4dv (v:POINTER) <- `glVertex4dv(@v)`;
  - gl_vertex4f (x:REAL_32, y:REAL_32, z:REAL_32, w:REAL_32) <- `glVertex4f(@x,@y,@z,@w)`;
  - gl_vertex4fv (v:POINTER) <- `glVertex4fv(@v)`;
  - gl_vertex4i (x:INTEGER, y:INTEGER, z:INTEGER, w:INTEGER) <- `glVertex4i(@x,@y,@z,@w)`;
  - gl_vertex4iv (v:POINTER) <- `glVertex4iv(@v)`;
  - gl_vertex4s (x:INTEGER_16, y:INTEGER_16, z:INTEGER_16, w:INTEGER_16) <- `glVertex4s(@x,@y,@z,@w)`;
  - gl_vertex4sv (v:POINTER) <- `glVertex4sv(@v)`;
  - gl_vertex_pointer (size:INTEGER, type:UINTEGER_32, stride:INTEGER, pointer:POINTER) <- `glVertexPointer(@size,@type,@stride,@pointer)`;
  - gl_viewport (x:INTEGER, y:INTEGER, width:INTEGER, height:INTEGER) <- `glViewport(@x,@y,@width,@height)`;
