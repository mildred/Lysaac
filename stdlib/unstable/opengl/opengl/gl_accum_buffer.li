///////////////////////////////////////////////////////////////////////////////
//                         Lisaac-OpenGL Library                            //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////

Section Header
  
  + name     := GL_ACCUM_BUFFER;
  
  - comment  := "OpenGL Accumulation Buffer";
  
Section Inherit
  
  - parent_accum_buffer:ACCUM_BUFFER := ACCUM_BUFFER;
  
Section Public
  
  // accumulation functions
  - accum:INTEGER <- `GL_ACCUM`:INTEGER;
  - load:INTEGER <- `GL_LOAD`:INTEGER;
  - return:INTEGER <- `GL_RETURN`:INTEGER; 
  - add:INTEGER <- `GL_ADD`:INTEGER; 
  - mult:INTEGER <- `GL_MULT`:INTEGER; 
  
  
  - clear <-
  (
    `glClear(GL_ACCUM_BUFFER_BIT)`;
  );
  
  - set_function f:INTEGER value val:REAL_32 <- 
  (
    `glAccum(@f, @val)`;
  );