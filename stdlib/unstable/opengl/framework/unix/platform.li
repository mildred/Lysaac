///////////////////////////////////////////////////////////////////////////////
//                         Lisaac-OpenGL Library                            //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////

Section Header
  
  + name     := PLATFORM;
  - comment  := "Platform dependant utility toolkit";
  
  - external := `
  #include <sys/time.h>
static struct timeval start, now, tv;
  `;
  
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Public  
  
  //
  // Time handling.
  //

  - init_time <-
  (
     `gettimeofday(&start, NULL)`;
  );
  
  - get_current_time:REAL_32 <-
  (
    `gettimeofday(&now, NULL)`;
    `(float)(now.tv_sec - start.tv_sec) + 0.000001f * (float)(now.tv_usec - start.tv_usec)`:REAL_32
  );

  - get_milliseconds:UINTEGER_32 <-
  (
    `gettimeofday(&now, NULL)`;
    `( now.tv_sec - start.tv_sec )*1000 + ( now.tv_usec - start.tv_usec )/1000`:UINTEGER_32
  );

  - delay ms:UINTEGER_32 <- 
  (   
    `tv.tv_sec = @ms/1000`;
    `tv.tv_usec = (@ms%1000)*1000`;
    `select(0, NULL, NULL, NULL, &tv)`;
  );

  - init_random <-
  (
    `srand((unsigned)time(NULL))`;
  );
  - random:INTEGER <-
  (
    `rand()`:INTEGER
  );

  - random_ratio:REAL_32 <-
  (
    `rand() / (float)(RAND_MAX)`:REAL_32
  );
  
  
  - frand:REAL_32 <- // 0 to 1
  (
    `(rand()&32767) * (1.0/32767)`:REAL_32
  );
  
  - crand <- // -1 to 1
  (
    `(rand()&32767)* (2.0/32767) - 1`:REAL_32
  );
