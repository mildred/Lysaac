///////////////////////////////////////////////////////////////////////////////
//                            Lisaac OS Library                              //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := GL_EVENT_SYSTEM;

  - copyright   := "2003-2005 JÃ©rome Boutet, 2003-2007 Benoit Sonntag";
  
  - comment     := "OpenGL-win32 - Event System";
    
  - bibliography:= "http://IsaacOS.com";
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
Section Inherit
  
  - parent_event_system:EVENT_SYSTEM := EVENT_SYSTEM;
    
Section Public  
  
  - get_event <-
  ( + go:BOOLEAN;
    
    go := TRUE;
    {go && {`PeekMessage (&msg_glob, NULL, 0, 0, PM_REMOVE)` != 0}}.while_do {
      (`msg_glob.message`:INTEGER = `WM_QUIT`:INTEGER).if {
        //
        //// ????
        //
	go := FALSE;	
      } else {
	`TranslateMessage (&msg_glob)`;
	`DispatchMessage (&msg_glob)`;
      };
    };
  );
 
  
  









