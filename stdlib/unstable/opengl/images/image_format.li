///////////////////////////////////////////////////////////////////////////////
//                         Lisaac-OpenGL Library                            //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////

Section Header
  
  + name     := IMAGE_FORMAT;
 
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Public
  
  - format:STRING_CONSTANT <- deferred;
  
  - load image:IMAGE :BOOLEAN <- 
 (
    error "Unknown format";
    FALSE
 );
  
  
  - get_format fmt:ABSTRACT_STRING :IMAGE_FORMAT <-
  (
    + result:IMAGE_FORMAT;
    
    (fmt.has_substring ".bmp").if {
      result := BMP;
    }.elseif {fmt.has_substring ".tga"} then {
      result := TGA;
    } else {
      
      result := Self;
    };
    result
  );
  
  - error err:ABSTRACT_STRING <-
  (
    err.print;
  );