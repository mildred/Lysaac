Section Header

  + name := STR;

  - author        := "Mildred Ki'Lya <mildred593(at)online.fr>";
  - copyright     := "2008 Mildred Ki'Lya";
  - comment       := "";

  - import := NATIVE_ARRAY(CHAR);
  - export := NATIVE_ARRAY(CHAR);

  // Copyright (c) 2008 Mildred Ki'Lya <mildred593(at)online.fr>
  //
  // Permission is hereby granted, free of charge, to any person
  // obtaining a copy of this software and associated documentation
  // files (the "Software"), to deal in the Software without
  // restriction, including without limitation the rights to use,
  // copy, modify, merge, publish, distribute, sublicense, and/or sell
  // copies of the Software, and to permit persons to whom the
  // Software is furnished to do so, subject to the following
  // conditions:
  //
  // The above copyright notice and this permission notice shall be
  // included in all copies or substantial portions of the Software.
  //
  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  // EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  // OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  // NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  // HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  // WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  // FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  // OTHER DEALINGS IN THE SOFTWARE.

Section Inherit

  + parent :Expanded OBJECT;

Section Public

  + storage :NATIVE_ARRAY(CHAR);

  + count :INTEGER;

  - lower :INTEGER := 1;

  - upper :INTEGER <- count;

  - item i:INTEGER :CHAR <- storage.item i;

  - put c:CHAR to i:INTEGER <- storage.put c to i;

  - from_native_array_char a:NATIVE_ARRAY(CHAR) :SELF <-
  ( + res :SELF;
    + length :INTEGER;
    res := clone;
    {a.item length !== 0}.while_do {
      length := length + 1;
    };
    res.make_from_native_array_char a length length;
    res
  );

  - from_native_array_char a:NATIVE_ARRAY(CHAR) length length:INTEGER :SELF <-
  ( + res :SELF;
    res := clone;
    res.make_from_native_array_char a length length;
    res
  );

  - make_from_native_array_char a:NATIVE_ARRAY(CHAR) length c:INTEGER <-
  (
    storage := a;
    count   := c;
  );

  - to_native_array_char :NATIVE_ARRAY(CHAR) <- storage;

// kate: hl Lisaac v0.2; indent-width 2; space-indent on; replace-tabs off;
// kate: tab-width 8; remove-trailing-space on;
